openapi: 3.1.0
info:
    title: Kindred API
    description: Kindred API built with Huma v2 and Fiber
    version: 1.0.0
paths:
    /v1/{userId}/posts:
        get:
            tags:
                - posts
            summary: Get User's posts
            description: Get posts of a user
            operationId: get-user-posts
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/PostDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/activity:
        get:
            tags:
                - activities
            summary: Get all activities
            description: Retrieve all activity records
            operationId: get-activities
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ActivityDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/activity/{id}:
        get:
            tags:
                - activities
            summary: Get activity by ID
            description: Retrieve a specific activity by its ID
            operationId: get-activity
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: year
                  in: query
                  explode: false
                  schema:
                    type: integer
                    format: int64
                    examples:
                        - 2024
                  example: 2024
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivityDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/activity/user/{userID}:
        get:
            tags:
                - activities
            summary: Get activity by user and period
            description: Retrieve activity for a specific user, year, and month
            operationId: get-activity-by-user-and-period
            parameters:
                - name: userID
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: year
                  in: query
                  explode: false
                  schema:
                    type: integer
                    format: int64
                    examples:
                        - 2024
                  example: 2024
                - name: month
                  in: query
                  explode: false
                  schema:
                    type: integer
                    format: int64
                    examples:
                        - 12
                  example: 12
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivityDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/activity/user/{userID}/recent:
        get:
            tags:
                - activities
            summary: Get recent activity
            description: Retrieve the user's activity for the last 8 days
            operationId: get-recent-activity
            parameters:
                - name: userID
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ActivityDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/activity/user/{userID}/year:
        get:
            tags:
                - activities
            summary: Get activity by user and year
            description: Retrieve all activity for a specific user and year
            operationId: get-activity-by-user-and-year
            parameters:
                - name: userID
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: year
                  in: query
                  explode: false
                  schema:
                    type: integer
                    format: int64
                    examples:
                        - 2024
                  example: 2024
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ActivityDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/assets/{key}/url:
        get:
            tags:
                - assets
            summary: Get presigned URL for asset download
            description: Get a presigned URL to download an asset from S3
            operationId: get-presigned-url
            parameters:
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - profile-pictures/user123.jpg
                  example: profile-pictures/user123.jpg
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema: {}
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/assets/upload:
        post:
            tags:
                - assets
            summary: Create presigned URL for asset upload
            description: Create a presigned URL to upload an asset to S3
            operationId: create-presigned-url
            parameters:
                - name: fileType
                  in: query
                  required: true
                  explode: false
                  schema:
                    type: string
                    examples:
                        - image/jpeg
                  example: image/jpeg
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema: {}
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/auth/login:
        post:
            tags:
                - auth
            summary: User login
            description: Authenticate user with email and password
            operationId: login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    headers:
                        access_token:
                            schema:
                                type: string
                        refresh_token:
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SafeUser'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/auth/login/apple:
        post:
            tags:
                - auth
            summary: Login with Apple
            description: Authenticate user with Apple ID
            operationId: login-apple
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequestApple'
                required: true
            responses:
                "200":
                    description: OK
                    headers:
                        access_token:
                            schema:
                                type: string
                        refresh_token:
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SafeUser'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/auth/logout:
        post:
            tags:
                - auth
            summary: User logout
            description: Logout user and invalidate tokens
            operationId: logout
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/auth/register:
        post:
            tags:
                - auth
            summary: User registration
            description: Register a new user account
            operationId: register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    headers:
                        access_token:
                            schema:
                                type: string
                        refresh_token:
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/auth/register/apple:
        post:
            tags:
                - auth
            summary: Register with Apple
            description: Register a new user with Apple ID
            operationId: register-apple
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequestApple'
                required: true
            responses:
                "200":
                    description: OK
                    headers:
                        access_token:
                            schema:
                                type: string
                        refresh_token:
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/blueprints:
        get:
            tags:
                - blueprints
            summary: Get all blueprints
            description: Retrieve all blueprints
            operationId: get-blueprints
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/BlueprintDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/blueprints/{id}:
        get:
            tags:
                - blueprints
            summary: Get blueprint by ID
            description: Retrieve a specific blueprint by its ID
            operationId: get-blueprint
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BlueprintDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/blueprints/by-category:
        get:
            tags:
                - blueprints
            summary: Get blueprints grouped by category
            description: Retrieve all blueprints grouped by their category field
            operationId: get-blueprints-by-category
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/BlueprintCategoryGroup'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/blueprints/search:
        get:
            tags:
                - blueprints
            summary: Search blueprints
            description: Search for blueprints by name, description, tags, or owner handle
            operationId: search-blueprints
            parameters:
                - name: query
                  in: query
                  explode: false
                  schema:
                    type: string
                    examples:
                        - morning routine
                  example: morning routine
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/BlueprintDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/categories:
        get:
            tags:
                - categories
            summary: Get all categories
            description: Retrieve all categories
            operationId: get-categories
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/CategoryDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/categories/{id}:
        get:
            tags:
                - categories
            summary: Get category by ID
            description: Retrieve a specific category by its ID
            operationId: get-category
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CategoryDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/health:
        get:
            tags:
                - health
            summary: Health check endpoint
            description: Returns the health status of the API
            operationId: get-health
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HealthOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/profiles:
        get:
            tags:
                - profiles
            summary: Get all profiles
            description: Retrieve all user profiles
            operationId: get-profiles
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ProfileDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/profiles/{id}:
        delete:
            tags:
                - profiles
            summary: Delete profile
            description: Delete a user profile
            operationId: delete-profile
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteProfileOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        patch:
            tags:
                - profiles
            summary: Update profile
            description: Update a user profile
            operationId: update-profile
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateProfileDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateProfileOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/profiles/email/{email}:
        get:
            tags:
                - profiles
            summary: Get profile by email
            description: Retrieve a user profile by email address
            operationId: get-profile-by-email
            parameters:
                - name: email
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - user@example.com
                  example: user@example.com
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProfileDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/profiles/phone/{phone}:
        get:
            tags:
                - profiles
            summary: Get profile by phone
            description: Retrieve a user profile by phone number
            operationId: get-profile-by-phone
            parameters:
                - name: phone
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - "+1234567890"
                  example: "+1234567890"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProfileDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/tasks/:
        get:
            tags:
                - tasks
            summary: Get all tasks
            description: Retrieve all task records
            operationId: get-tasks
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TaskDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/tasks/{id}:
        get:
            tags:
                - tasks
            summary: Get task by ID
            description: Retrieve a specific task by its ID
            operationId: get-task
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TaskDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/tasks/active/{id}:
        get:
            tags:
                - tasks
            summary: Get active tasks
            description: Retrieve all active tasks for a user
            operationId: get-active-tasks
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TaskDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/uploads/{resource_type}/{resource_id}/confirm:
        post:
            tags:
                - uploads
                - images
            summary: Confirm image upload
            description: Confirm that an image has been successfully uploaded and update the resource
            operationId: confirm-image-upload
            parameters:
                - name: resource_type
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - profile
                  example: profile
                - name: resource_id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ConfirmImageUploadInputBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConfirmImageUploadOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/uploads/{resource_type}/{resource_id}/url:
        get:
            tags:
                - uploads
                - images
            summary: Generate presigned URL for image upload
            description: Generate a presigned URL for uploading images to Digital Ocean Spaces
            operationId: generate-image-upload-url
            parameters:
                - name: resource_type
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - profile
                  example: profile
                - name: resource_id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: file_type
                  in: query
                  required: true
                  explode: false
                  schema:
                    type: string
                    examples:
                        - image/jpeg
                  example: image/jpeg
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateImageUploadURLOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user:
        get:
            tags:
                - auth
            summary: Test authentication
            description: Test endpoint for authenticated users
            operationId: auth-test
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TestOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/:
        get:
            tags:
                - auth
            summary: Test authentication
            description: Test endpoint for authenticated users
            operationId: auth-test-slash
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TestOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/blueprints:
        post:
            tags:
                - blueprints
            summary: Create a new blueprint
            description: Create a new blueprint for the authenticated user
            operationId: create-blueprint
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateBlueprintParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BlueprintDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/blueprints/{id}:
        delete:
            tags:
                - blueprints
            summary: Delete blueprint
            description: Delete a blueprint for the authenticated user
            operationId: delete-blueprint
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteBlueprintOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        patch:
            tags:
                - blueprints
            summary: Update blueprint
            description: Update a blueprint for the authenticated user
            operationId: update-blueprint
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBlueprintDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateBlueprintOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/blueprints/{id}/subscribe:
        patch:
            tags:
                - blueprints
            summary: Subscribe to blueprint
            description: Subscribe to a blueprint
            operationId: subscribe-to-blueprint
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SubscribeToBlueprintOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/blueprints/{id}/unsubscribe:
        patch:
            tags:
                - blueprints
            summary: Unsubscribe from blueprint
            description: Unsubscribe from a blueprint
            operationId: unsubscribe-from-blueprint
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnsubscribeFromBlueprintOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/blueprints/creator/{creatorId}:
        get:
            tags:
                - blueprints
            summary: Get blueprints by creator
            description: Retrieve all blueprints created by a specific user
            operationId: get-blueprints-by-creator
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: creatorId
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/BlueprintDocumentWithoutSubscribers'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/blueprints/subscribed:
        get:
            tags:
                - blueprints
            summary: Get user's subscribed blueprints
            description: Retrieve all blueprints that the authenticated user is subscribed to
            operationId: get-user-subscribed-blueprints
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/BlueprintDocumentWithoutSubscribers'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/categories:
        post:
            tags:
                - categories
            summary: Create a new category
            description: Create a new category for the authenticated user
            operationId: create-category
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCategoryParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CategoryDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/categories/{id}:
        get:
            tags:
                - categories
            summary: Get categories by user ID
            description: Retrieve all categories for a specific user
            operationId: get-categories-by-user
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/WorkspaceResult'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        delete:
            tags:
                - categories
            summary: Delete category
            description: Delete a category for the authenticated user
            operationId: delete-category
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteCategoryOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        patch:
            tags:
                - categories
            summary: Update category
            description: Update a category for the authenticated user
            operationId: update-category
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateCategoryDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateCategoryOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/categories/workspace/{name}:
        delete:
            tags:
                - categories
            summary: Delete workspace
            description: Delete a workspace and all its categories
            operationId: delete-workspace
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - workspace1
                  example: workspace1
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteWorkspaceOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/categories/workspace/{oldName}:
        patch:
            tags:
                - categories
            summary: Rename workspace
            description: Rename a workspace by updating all its categories
            operationId: rename-workspace
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: oldName
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - old-workspace
                  example: old-workspace
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RenameWorkspaceInputBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RenameWorkspaceOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/category/{category}/task/{id}/deadline:
        patch:
            tags:
                - tasks
            summary: Update task deadline
            description: Update the deadline for a specific task
            operationId: update-task-deadline
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: category
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTaskDeadlineDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTaskDeadlineOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/category/{category}/task/{id}/reminders:
        patch:
            tags:
                - tasks
            summary: Update task reminders
            description: Update the reminders for a specific task
            operationId: update-task-reminder
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: category
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTaskReminderDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTaskReminderOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/category/{category}/task/{id}/start:
        patch:
            tags:
                - tasks
            summary: Update task start date/time
            description: Update the start date and time for a specific task
            operationId: update-task-start
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: category
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTaskStartDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTaskStartOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/congratulations:
        get:
            tags:
                - congratulations
            summary: Get congratulations
            description: Retrieve all congratulations received by the authenticated user
            operationId: get-congratulations
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/CongratulationDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        post:
            tags:
                - congratulations
            summary: Create a new congratulation
            description: Create a new congratulation message for another user
            operationId: create-congratulation
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCongratulationParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CongratulationDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/congratulations/{id}:
        get:
            tags:
                - congratulations
            summary: Get congratulation by ID
            description: Retrieve a specific congratulation by its ID
            operationId: get-congratulation
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CongratulationDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        delete:
            tags:
                - congratulations
            summary: Delete congratulation
            description: Delete a congratulation message
            operationId: delete-congratulation
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteCongratulationOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        patch:
            tags:
                - congratulations
            summary: Update congratulation
            description: Update a congratulation message
            operationId: update-congratulation
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateCongratulationDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateCongratulationOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/congratulations/mark-read:
        patch:
            tags:
                - congratulations
            summary: Mark congratulations as read
            description: Mark multiple congratulations as read
            operationId: mark-congratulations-read
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MarkCongratulationsReadOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/connections:
        get:
            tags:
                - connections
            summary: Get all connections
            description: Retrieve all connection requests
            operationId: get-connections
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ConnectionDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        post:
            tags:
                - connections
            summary: Create a new connection
            description: Create a new friend connection request
            operationId: create-connection
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateConnectionParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConnectionDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/connections/{id}:
        get:
            tags:
                - connections
            summary: Get connection by ID
            description: Retrieve a specific connection by its ID
            operationId: get-connection
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConnectionDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        delete:
            tags:
                - connections
            summary: Delete connection
            description: Delete/deny a connection request
            operationId: delete-connection
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteConnectionOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        patch:
            tags:
                - connections
            summary: Update connection
            description: Update a connection request
            operationId: update-connection
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateConnectionDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateConnectionOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/connections/{id}/accept:
        post:
            tags:
                - connections
            summary: Accept connection request
            description: Accept a friend connection request
            operationId: accept-connection
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AcceptConnectionOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/connections/received:
        get:
            tags:
                - connections
            summary: Get connections by receiver
            description: Get all connections where the authenticated user is the receiver
            operationId: get-connections-by-receiver
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ConnectionDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/connections/requested/{id}:
        get:
            tags:
                - connections
            summary: Get connections by requester
            description: Get all connections where the specified user is the requester
            operationId: get-connections-by-requester
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ConnectionDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/encouragements:
        get:
            tags:
                - encouragements
            summary: Get encouragements
            description: Retrieve all encouragements received by the authenticated user
            operationId: get-encouragements
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/EncouragementDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        post:
            tags:
                - encouragements
            summary: Create a new encouragement
            description: Create a new encouragement message for another user
            operationId: create-encouragement
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEncouragementParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EncouragementDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/encouragements/{id}:
        get:
            tags:
                - encouragements
            summary: Get encouragement by ID
            description: Retrieve a specific encouragement by its ID
            operationId: get-encouragement
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EncouragementDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        delete:
            tags:
                - encouragements
            summary: Delete encouragement
            description: Delete an encouragement message
            operationId: delete-encouragement
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEncouragementOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        patch:
            tags:
                - encouragements
            summary: Update encouragement
            description: Update an encouragement message
            operationId: update-encouragement
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateEncouragementDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEncouragementOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/encouragements/mark-read:
        patch:
            tags:
                - encouragements
            summary: Mark encouragements as read
            description: Mark multiple encouragements as read
            operationId: mark-encouragements-read
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MarkEncouragementsReadOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/groups:
        get:
            tags:
                - groups
            summary: Get all user groups
            description: Retrieve all groups where user is creator or member
            operationId: get-groups
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetGroupsOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        post:
            tags:
                - groups
            summary: Create a new group
            description: Create a new group with the provided details
            operationId: create-group
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateGroupParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupDocumentAPI'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/groups/{id}:
        get:
            tags:
                - groups
            summary: Get group by ID
            description: Retrieve a specific group by its ID
            operationId: get-group
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupDocumentAPI'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        delete:
            tags:
                - groups
            summary: Delete group
            description: Delete an existing group (creator only)
            operationId: delete-group
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteGroupOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        patch:
            tags:
                - groups
            summary: Update group
            description: Update an existing group (creator only)
            operationId: update-group
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGroupParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGroupOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/groups/{id}/members:
        post:
            tags:
                - groups
            summary: Add member to group
            description: Add a member to an existing group (creator only)
            operationId: add-group-member
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddMemberParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddMemberOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        delete:
            tags:
                - groups
            summary: Remove member from group
            description: Remove a member from an existing group (creator only or self)
            operationId: remove-group-member
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RemoveMemberParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMemberOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/login:
        post:
            tags:
                - auth
            summary: Login with token
            description: Authenticate user with existing token
            operationId: login-token
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    headers:
                        access_token:
                            schema:
                                type: string
                        refresh_token:
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SafeUser'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/notifications:
        get:
            tags:
                - notifications
            summary: Get notifications
            description: Retrieve notifications for the authenticated user with pagination
            operationId: get-notifications
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: limit
                  in: query
                  description: 'Maximum number of notifications to return (default: 20, max: 100)'
                  explode: false
                  schema:
                    type: integer
                    description: 'Maximum number of notifications to return (default: 20, max: 100)'
                    format: int64
                    examples:
                        - 20
                  example: 20
                - name: skip
                  in: query
                  description: Number of notifications to skip for pagination
                  explode: false
                  schema:
                    type: integer
                    description: Number of notifications to skip for pagination
                    format: int64
                    examples:
                        - 0
                  example: 0
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetNotificationsOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/notifications/{id}:
        delete:
            tags:
                - notifications
            summary: Delete notification
            description: Delete a specific notification
            operationId: delete-notification
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteNotificationOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/notifications/read:
        patch:
            tags:
                - notifications
            summary: Mark notifications as read
            description: Mark specific notifications as read
            operationId: mark-notifications-read
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MarkNotificationsReadOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/notifications/read-all:
        patch:
            tags:
                - notifications
            summary: Mark all notifications as read
            description: Mark all notifications as read for the authenticated user
            operationId: mark-all-notifications-read
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MarkAllNotificationsReadOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/posts:
        get:
            tags:
                - posts
            summary: Get all posts
            description: Retrieve all posts
            operationId: get-posts
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPostsOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        post:
            tags:
                - posts
            summary: Create a new post
            description: Create a new post with the provided details
            operationId: create-post
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreatePostParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostDocumentAPI'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/posts/{id}:
        get:
            tags:
                - posts
            summary: Get post by ID
            description: Retrieve a specific post by its ID
            operationId: get-post
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostDocumentAPI'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        delete:
            tags:
                - posts
            summary: Delete post
            description: Delete an existing post
            operationId: delete-post
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeletePostOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        patch:
            tags:
                - posts
            summary: Update post
            description: Update an existing post
            operationId: update-post
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdatePostParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePostOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/posts/{postId}/comment:
        post:
            tags:
                - posts
            summary: Add comment to post
            description: Add a comment to an existing post
            operationId: add-comment
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: postId
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddCommentParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddCommentOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/posts/{postId}/comment/{commentId}:
        delete:
            tags:
                - posts
            summary: Delete comment from post
            description: Delete comment from an existing post
            operationId: delete-comment
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: postId
                  in: path
                  description: Post ID
                  required: true
                  schema:
                    type: string
                    description: Post ID
                - name: commentId
                  in: path
                  description: Comment ID
                  required: true
                  schema:
                    type: string
                    description: Comment ID
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteCommentOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/posts/{postId}/reaction:
        post:
            tags:
                - posts
            summary: React to a post
            description: Adds a reaction to a post
            operationId: add-reaction
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: postId
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddReactionParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddReactionOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/posts/blueprint/{blueprintId}:
        get:
            tags:
                - posts
            summary: Get posts by blueprint
            description: Retrieve all posts associated with a specific blueprint
            operationId: get-posts-by-blueprint
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: blueprintId
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPostsByBlueprintOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/posts/friends:
        get:
            tags:
                - posts
            summary: Get friends posts
            description: Retrieve posts from user's friends, ordered chronologically
            operationId: get-friends-posts
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFriendsPostsOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/posts/groups:
        get:
            tags:
                - posts
            summary: Get user groups
            description: Retrieve all groups where user is creator or member
            operationId: get-user-groups
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserGroupsOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/profiles/{id}:
        get:
            tags:
                - profiles
            summary: Get profile by ID
            description: Retrieve a specific user profile by its ID
            operationId: get-profile
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProfileDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/profiles/search:
        get:
            tags:
                - profiles
            summary: Search profiles
            description: Search for user profiles by query string
            operationId: search-profiles
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: query
                  in: query
                  explode: false
                  schema:
                    type: string
                    examples:
                        - john
                  example: john
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ProfileDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/pushtoken:
        post:
            tags:
                - auth
            summary: Update push token
            description: Update user's push notification token
            operationId: update-push-token
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdatePushTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePushTokenOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/tasks/:
        get:
            tags:
                - tasks
            summary: Get tasks by user
            description: Retrieve tasks for a specific user with optional sorting
            operationId: get-tasks-by-user
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: query
                  explode: false
                  schema:
                    type: string
                - name: sortBy
                  in: query
                  explode: false
                  schema:
                    type: string
                    default: timestamp
                    examples:
                        - timestamp
                  example: timestamp
                - name: sortDir
                  in: query
                  explode: false
                  schema:
                    type: string
                    default: "-1"
                    examples:
                        - "-1"
                  example: "-1"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TaskDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/tasks/{category}:
        post:
            tags:
                - tasks
            summary: Create a new task
            description: Create a new task in a specific category
            operationId: create-task
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: category
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTaskParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TaskDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/tasks/{category}/{id}:
        delete:
            tags:
                - tasks
            summary: Delete task
            description: Delete a task record
            operationId: delete-task
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: category
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTaskOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        patch:
            tags:
                - tasks
            summary: Update task
            description: Update a task record
            operationId: update-task
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: category
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTaskDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTaskOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/tasks/{category}/{id}/checklist:
        post:
            tags:
                - tasks
            summary: Update task checklist
            description: Update the checklist field of a task
            operationId: update-task-checklist
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: category
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTaskChecklistDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTaskChecklistOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/tasks/{category}/{id}/notes:
        post:
            tags:
                - tasks
            summary: Update task notes
            description: Update the notes field of a task
            operationId: update-task-notes
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: category
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTaskNotesDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTaskNotesOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/tasks/active/{category}/{id}:
        post:
            tags:
                - tasks
            summary: Activate/deactivate task
            description: Change the active status of a task
            operationId: activate-task
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: category
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: active
                  in: query
                  explode: false
                  schema:
                    type: string
                    examples:
                        - "true"
                  example: "true"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivateTaskOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/tasks/complete/{category}/{id}:
        post:
            tags:
                - tasks
            summary: Complete task
            description: Mark a task as completed
            operationId: complete-task
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
                - name: category
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CompleteTaskDocument'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CompleteTaskOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/tasks/completed:
        get:
            tags:
                - tasks
            summary: Get completed tasks
            description: Retrieve all completed tasks for the logged in user
            operationId: get-completed-tasks
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TaskDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/tasks/template/{id}:
        get:
            tags:
                - tasks
            summary: Get template by ID
            description: Retrieve a template by its ID
            operationId: get-template-by-id
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TemplateTaskDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        post:
            tags:
                - tasks
            summary: Create task from template
            description: Create a new task based on a template
            operationId: create-task-from-template
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TaskDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/tasks/template/old:
        get:
            tags:
                - tasks
            summary: Get tasks with old start times
            description: Get all tasks with start times older than one day
            operationId: get-tasks-with-old-start-times
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TemplateTaskDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/tasks/template/pastDeadline:
        get:
            tags:
                - tasks
            summary: Get recurring tasks with past deadlines
            description: Get all recurring tasks that have past their deadlines
            operationId: get-recurring-tasks-with-past-deadlines
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TemplateTaskDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/waitlist:
        get:
            tags:
                - waitlist
            summary: Get all waitlist entries
            description: Retrieve all waitlist entries (admin only)
            operationId: get-waitlists
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/WaitlistDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/waitlist/{id}:
        get:
            tags:
                - waitlist
            summary: Get waitlist entry by ID
            description: Retrieve a specific waitlist entry by its ID
            operationId: get-waitlist
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WaitlistDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
        delete:
            tags:
                - waitlist
            summary: Delete waitlist entry
            description: Remove a waitlist entry by its ID
            operationId: delete-waitlist
            parameters:
                - name: Authorization
                  in: header
                  description: Bearer token for authentication
                  required: true
                  schema:
                    type: string
                    description: Bearer token for authentication
                - name: refresh_token
                  in: header
                  description: Refresh token for authentication
                  required: true
                  schema:
                    type: string
                    description: Refresh token for authentication
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    examples:
                        - 507f1f77bcf86cd799439011
                  example: 507f1f77bcf86cd799439011
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteWaitlistOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/user/workspaces:
        get:
            tags:
                - categories
            summary: Get user workspaces
            description: Retrieve all workspaces for the authenticated user
            operationId: get-workspaces
            parameters:
                - name: Authorization
                  in: header
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/WorkspaceResult'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /v1/waitlist:
        post:
            tags:
                - waitlist
            summary: Create a new waitlist entry
            description: Add a new email to the waitlist
            operationId: create-waitlist
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateWaitlistParams'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WaitlistDocument'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
    /welcome:
        get:
            tags:
                - general
            summary: Welcome endpoint
            description: Returns a welcome message
            operationId: get-welcome
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WelcomeOutputBody'
                default:
                    description: Error
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/ErrorModel'
components:
    schemas:
        AcceptConnectionOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/AcceptConnectionOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Connection request accepted successfully
            required:
                - message
        ActivateTaskOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/ActivateTaskOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Task activation status updated successfully
            required:
                - message
        ActivityDay:
            type: object
            additionalProperties: false
            properties:
                count:
                    type: integer
                    format: int64
                day:
                    type: integer
                    format: int64
                level:
                    type: integer
                    format: int64
            required:
                - day
                - count
                - level
        ActivityDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/ActivityDocument.json
                    readOnly: true
                _id:
                    type: string
                days:
                    type: array
                    items:
                        $ref: '#/components/schemas/ActivityDay'
                lastUpdated:
                    type: string
                    format: date-time
                month:
                    type: integer
                    format: int64
                totalCount:
                    type: integer
                    format: int64
                user:
                    type: string
                year:
                    type: integer
                    format: int64
            required:
                - _id
                - user
                - year
                - month
                - days
                - totalCount
                - lastUpdated
        AddCommentOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/AddCommentOutputBody.json
                    readOnly: true
                comment:
                    $ref: '#/components/schemas/CommentDocumentAPI'
                message:
                    type: string
                    examples:
                        - Comment added successfully
            required:
                - message
                - comment
        AddCommentParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/AddCommentParams.json
                    readOnly: true
                content:
                    type: string
                parentId:
                    type: string
            required:
                - content
        AddMemberOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/AddMemberOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Member added successfully
            required:
                - message
        AddMemberParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/AddMemberParams.json
                    readOnly: true
                userId:
                    type: string
            required:
                - userId
        AddReactionOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/AddReactionOutputBody.json
                    readOnly: true
                added:
                    type: boolean
                    examples:
                        - true
                message:
                    type: string
                    examples:
                        - Reaction added successfully
            required:
                - message
                - added
        AddReactionParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/AddReactionParams.json
                    readOnly: true
                emoji:
                    type: string
            required:
                - emoji
        BlueprintCategoryGroup:
            type: object
            additionalProperties: false
            properties:
                blueprints:
                    type: array
                    description: List of blueprints in this category
                    items:
                        $ref: '#/components/schemas/BlueprintDocument'
                category:
                    type: string
                    description: Category name (maps from aggregation _id)
                    examples:
                        - productivity
                count:
                    type: integer
                    description: Number of blueprints in this category
                    format: int64
                    examples:
                        - 5
            required:
                - category
                - blueprints
                - count
        BlueprintDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/BlueprintDocument.json
                    readOnly: true
                banner:
                    type: string
                    description: Banner image URL
                    examples:
                        - https://example.com/banner.jpg
                categories:
                    type: array
                    description: Categories associated with the blueprint
                    examples:
                        - - id: 507f1f77bcf86cd799439011
                            lastEdited: "2023-01-01T00:00:00Z"
                            name: Productivity
                            user: 507f1f77bcf86cd799439012
                            workspaceName: Personal
                    items:
                        $ref: '#/components/schemas/CategoryDocument'
                category:
                    type: string
                    description: Category of the blueprint
                    examples:
                        - productivity
                description:
                    type: string
                    description: Description of the blueprint
                    examples:
                        - A comprehensive morning routine
                duration:
                    type: string
                    description: Expected duration
                    examples:
                        - 30m
                id:
                    type: string
                    description: Unique identifier for the blueprint
                    examples:
                        - 507f1f77bcf86cd799439011
                name:
                    type: string
                    description: Name of the blueprint
                    examples:
                        - Morning Routine
                owner:
                    description: Owner information
                    $ref: '#/components/schemas/UserExtendedReference'
                subscribers:
                    type: array
                    description: List of subscriber user IDs
                    examples:
                        - - 507f1f77bcf86cd799439012
                    items:
                        type: string
                subscribersCount:
                    type: integer
                    description: Number of subscribers
                    format: int64
                    examples:
                        - 42
                tags:
                    type: array
                    description: Tags associated with the blueprint
                    examples:
                        - - productivity
                          - morning
                    items:
                        type: string
                timestamp:
                    type: string
                    description: Creation timestamp
                    format: date-time
                    examples:
                        - "2023-01-01T00:00:00Z"
            required:
                - id
                - banner
                - name
                - tags
                - description
                - duration
                - subscribers
                - owner
                - subscribersCount
                - timestamp
                - categories
                - category
        BlueprintDocumentWithoutSubscribers:
            type: object
            additionalProperties: false
            properties:
                banner:
                    type: string
                    description: Banner image URL
                    examples:
                        - https://example.com/banner.jpg
                categories:
                    type: array
                    description: Categories associated with the blueprint
                    examples:
                        - - id: 507f1f77bcf86cd799439011
                            name: Productivity
                    items:
                        $ref: '#/components/schemas/CategoryDocument'
                category:
                    type: string
                    description: Category of the blueprint
                    examples:
                        - productivity
                description:
                    type: string
                    description: Description of the blueprint
                    examples:
                        - A comprehensive morning routine
                duration:
                    type: string
                    description: Expected duration
                    examples:
                        - 30m
                id:
                    type: string
                    description: Unique identifier for the blueprint
                    examples:
                        - 507f1f77bcf86cd799439011
                name:
                    type: string
                    description: Name of the blueprint
                    examples:
                        - Morning Routine
                owner:
                    description: Owner information
                    $ref: '#/components/schemas/UserExtendedReference'
                subscribersCount:
                    type: integer
                    description: Number of subscribers
                    format: int64
                    examples:
                        - 42
                tags:
                    type: array
                    description: Tags associated with the blueprint
                    examples:
                        - - productivity
                          - morning
                    items:
                        type: string
                timestamp:
                    type: string
                    description: Creation timestamp
                    format: date-time
                    examples:
                        - "2023-01-01T00:00:00Z"
            required:
                - id
                - banner
                - name
                - tags
                - description
                - duration
                - owner
                - subscribersCount
                - timestamp
                - category
                - categories
        CategoryDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/CategoryDocument.json
                    readOnly: true
                blueprintId:
                    type: string
                id:
                    type: string
                isBlueprint:
                    type: boolean
                lastEdited:
                    type: string
                    format: date-time
                name:
                    type: string
                tasks:
                    type: array
                    items:
                        $ref: '#/components/schemas/TaskDocument'
                user:
                    type: string
                workspaceName:
                    type: string
            required:
                - id
                - name
                - workspaceName
                - lastEdited
                - tasks
                - user
        CategoryExtendedReference:
            type: object
            additionalProperties: false
            properties:
                blueprintId:
                    type: string
                id:
                    type: string
                isBlueprint:
                    type: boolean
                name:
                    type: string
            required:
                - id
                - name
        ChecklistItem:
            type: object
            additionalProperties: false
            properties:
                completed:
                    type: boolean
                content:
                    type: string
                order:
                    type: integer
                    format: int64
            required:
                - content
                - completed
                - order
        CommentDocument:
            type: object
            additionalProperties: false
            properties:
                content:
                    type: string
                id:
                    type: string
                metadata:
                    $ref: '#/components/schemas/CommentMetadata'
                parentId:
                    type: string
                user:
                    $ref: '#/components/schemas/UserExtendedReferenceInternal'
            required:
                - id
                - user
                - content
                - metadata
        CommentDocumentAPI:
            type: object
            additionalProperties: false
            properties:
                content:
                    type: string
                id:
                    type: string
                metadata:
                    $ref: '#/components/schemas/CommentMetadata'
                parentId:
                    type: string
                user:
                    $ref: '#/components/schemas/UserExtendedReference'
            required:
                - id
                - user
                - content
                - metadata
        CommentMetadata:
            type: object
            additionalProperties: false
            properties:
                createdAt:
                    type: string
                    format: date-time
                isDeleted:
                    type: boolean
                lastEdited:
                    type: string
                    format: date-time
            required:
                - createdAt
                - isDeleted
                - lastEdited
        CompleteTaskDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/CompleteTaskDocument.json
                    readOnly: true
                timeCompleted:
                    type: string
                timeTaken:
                    type: string
            required:
                - timeCompleted
                - timeTaken
        CompleteTaskOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/CompleteTaskOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Task completed successfully
            required:
                - message
        ConfirmImageUploadInputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/ConfirmImageUploadInputBody.json
                    readOnly: true
                public_url:
                    type: string
                    examples:
                        - https://kindred.nyc3.digitaloceanspaces.com/profiles/507f1f77bcf86cd799439011/uuid.jpg
            required:
                - public_url
        ConfirmImageUploadOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/ConfirmImageUploadOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Image upload confirmed successfully
            required:
                - message
        CongratulationDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/CongratulationDocument.json
                    readOnly: true
                categoryName:
                    type: string
                    description: Category name
                    examples:
                        - Work
                id:
                    type: string
                    description: Unique identifier for the congratulation
                    examples:
                        - 507f1f77bcf86cd799439011
                message:
                    type: string
                    description: Congratulation message
                    examples:
                        - Congratulations on completing your task!
                read:
                    type: boolean
                    description: Whether the congratulation has been read
                    examples:
                        - false
                receiver:
                    type: string
                    description: Receiver user ID
                    examples:
                        - 507f1f77bcf86cd799439012
                sender:
                    description: Sender information
                    $ref: '#/components/schemas/CongratulationSender'
                taskName:
                    type: string
                    description: Task name
                    examples:
                        - Complete project proposal
                timestamp:
                    type: string
                    description: Creation timestamp
                    format: date-time
                    examples:
                        - "2023-01-01T00:00:00Z"
            required:
                - id
                - sender
                - receiver
                - message
                - timestamp
                - categoryName
                - taskName
                - read
        CongratulationSender:
            type: object
            additionalProperties: false
            properties:
                id:
                    type: string
                    description: Sender's user ID
                    examples:
                        - 507f1f77bcf86cd799439011
                name:
                    type: string
                    description: Sender's name
                    examples:
                        - John Doe
                picture:
                    type: string
                    description: Sender's profile picture URL
                    examples:
                        - https://example.com/avatar.jpg
            required:
                - name
                - picture
                - id
        ConnectionDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/ConnectionDocument.json
                    readOnly: true
                accepted_at:
                    type: string
                    description: When friendship was confirmed
                    format: date-time
                created_at:
                    type: string
                    description: When relationship was created
                    format: date-time
                id:
                    type: string
                    description: Relationship ID
                    examples:
                        - 507f1f77bcf86cd799439011
                receiver_id:
                    type: string
                    description: Receiver user ID
                requester:
                    description: Connection requester information
                    $ref: '#/components/schemas/ConnectionUser'
                status:
                    type: string
                    description: Relationship status
                users:
                    type: array
                    description: Array of user IDs (always sorted)
                    items:
                        type: string
            required:
                - id
                - users
                - status
                - requester
                - receiver_id
                - created_at
        ConnectionUser:
            type: object
            additionalProperties: false
            properties:
                _id:
                    type: string
                    description: User ID
                    examples:
                        - 507f1f77bcf86cd799439011
                handle:
                    type: string
                    description: User handle
                    examples:
                        - johndoe
                name:
                    type: string
                    description: User name
                    examples:
                        - John Doe
                picture:
                    type: string
                    description: Profile picture URL
                    examples:
                        - https://example.com/avatar.jpg
            required:
                - _id
                - picture
                - name
                - handle
        CreateBlueprintParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/CreateBlueprintParams.json
                    readOnly: true
                banner:
                    type: string
                    description: Banner image URL for the blueprint
                    examples:
                        - https://example.com/banner.jpg
                categories:
                    type: array
                    description: Categories associated with the blueprint
                    examples:
                        - - id: 507f1f77bcf86cd799439011
                            lastEdited: "2023-01-01T00:00:00Z"
                            name: Productivity
                            user: 507f1f77bcf86cd799439012
                            workspaceName: Personal
                    items:
                        $ref: '#/components/schemas/CategoryDocument'
                category:
                    type: string
                    description: Category of the blueprint
                    examples:
                        - productivity
                description:
                    type: string
                    description: Description of the blueprint
                    examples:
                        - A comprehensive morning routine to start your day right
                duration:
                    type: string
                    description: Expected duration to complete the blueprint
                    examples:
                        - 30m
                name:
                    type: string
                    description: Name of the blueprint
                    examples:
                        - Morning Routine
                tags:
                    type: array
                    description: Tags associated with the blueprint
                    examples:
                        - - productivity
                          - morning
                    items:
                        type: string
            required:
                - banner
                - name
                - tags
                - description
                - duration
                - category
                - categories
        CreateCategoryParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/CreateCategoryParams.json
                    readOnly: true
                name:
                    type: string
                workspaceName:
                    type: string
        CreateCongratulationParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/CreateCongratulationParams.json
                    readOnly: true
                categoryName:
                    type: string
                    description: Category name
                    examples:
                        - Work
                message:
                    type: string
                    description: Congratulation message
                    examples:
                        - Congratulations on completing your task!
                receiver:
                    type: string
                    description: Receiver user ID
                    examples:
                        - 507f1f77bcf86cd799439012
                taskName:
                    type: string
                    description: Task name
                    examples:
                        - Complete project proposal
            required:
                - receiver
                - message
                - categoryName
                - taskName
        CreateConnectionParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/CreateConnectionParams.json
                    readOnly: true
                receiver_id:
                    type: string
                    description: Receiver user ID
                    examples:
                        - 507f1f77bcf86cd799439012
            required:
                - receiver_id
        CreateEncouragementParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/CreateEncouragementParams.json
                    readOnly: true
                categoryName:
                    type: string
                    description: Category name
                    examples:
                        - Work
                message:
                    type: string
                    description: Encouragement message
                    examples:
                        - Great job on completing your task!
                receiver:
                    type: string
                    description: Receiver user ID
                    examples:
                        - 507f1f77bcf86cd799439012
                taskName:
                    type: string
                    description: Task name
                    examples:
                        - Complete project proposal
            required:
                - receiver
                - message
                - categoryName
                - taskName
        CreateGroupParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/CreateGroupParams.json
                    readOnly: true
                members:
                    type: array
                    items:
                        type: string
                name:
                    type: string
            required:
                - name
        CreatePostParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/CreatePostParams.json
                    readOnly: true
                blueprintId:
                    type: string
                blueprintIsPublic:
                    type: boolean
                caption:
                    type: string
                groups:
                    type: array
                    items:
                        type: string
                images:
                    type: array
                    items:
                        type: string
                isPublic:
                    type: boolean
                task:
                    $ref: '#/components/schemas/PostTaskExtendedReference'
            required:
                - images
                - caption
                - isPublic
        CreateTaskParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/CreateTaskParams.json
                    readOnly: true
                active:
                    type: boolean
                checklist:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChecklistItem'
                content:
                    type: string
                deadline:
                    type: string
                    format: date-time
                notes:
                    type: string
                priority:
                    type: integer
                    format: int64
                public:
                    type: boolean
                recurDetails:
                    $ref: '#/components/schemas/RecurDetails'
                recurFrequency:
                    type: string
                recurring:
                    type: boolean
                reminders:
                    type: array
                    items:
                        $ref: '#/components/schemas/Reminder'
                startDate:
                    type: string
                    format: date-time
                startTime:
                    type: string
                    format: date-time
                value:
                    type: number
                    format: double
            required:
                - priority
                - content
                - value
                - recurring
                - public
                - active
        CreateWaitlistParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/CreateWaitlistParams.json
                    readOnly: true
                email:
                    type: string
                    description: User email address
                    examples:
                        - user@example.com
                name:
                    type: string
                    description: User full name
                    examples:
                        - John Doe
            required:
                - email
                - name
        DeleteBlueprintOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/DeleteBlueprintOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Blueprint deleted successfully
            required:
                - message
        DeleteCategoryOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/DeleteCategoryOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Category deleted successfully
            required:
                - message
        DeleteCommentOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/DeleteCommentOutputBody.json
                    readOnly: true
                message:
                    type: string
            required:
                - message
        DeleteCongratulationOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/DeleteCongratulationOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Congratulation deleted successfully
            required:
                - message
        DeleteConnectionOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/DeleteConnectionOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Connection deleted successfully
            required:
                - message
        DeleteEncouragementOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/DeleteEncouragementOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Encouragement deleted successfully
            required:
                - message
        DeleteGroupOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/DeleteGroupOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Group deleted successfully
            required:
                - message
        DeleteNotificationOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/DeleteNotificationOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Notification deleted successfully
            required:
                - message
        DeletePostOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/DeletePostOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Post deleted successfully
            required:
                - message
        DeleteProfileOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/DeleteProfileOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Profile deleted successfully
            required:
                - message
        DeleteTaskOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/DeleteTaskOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Task deleted successfully
            required:
                - message
        DeleteWaitlistOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/DeleteWaitlistOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Waitlist entry deleted successfully
                status:
                    type: string
                    examples:
                        - success
            required:
                - status
                - message
        DeleteWorkspaceOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/DeleteWorkspaceOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Workspace deleted successfully
            required:
                - message
        EncouragementDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/EncouragementDocument.json
                    readOnly: true
                categoryName:
                    type: string
                    description: Category name
                    examples:
                        - Work
                id:
                    type: string
                    description: Unique identifier for the encouragement
                    examples:
                        - 507f1f77bcf86cd799439011
                message:
                    type: string
                    description: Encouragement message
                    examples:
                        - Great job on completing your task!
                read:
                    type: boolean
                    description: Whether the encouragement has been read
                    examples:
                        - false
                receiver:
                    type: string
                    description: Receiver user ID
                    examples:
                        - 507f1f77bcf86cd799439012
                sender:
                    description: Sender information
                    $ref: '#/components/schemas/EncouragementSender'
                taskName:
                    type: string
                    description: Task name
                    examples:
                        - Complete project proposal
                timestamp:
                    type: string
                    description: Creation timestamp
                    format: date-time
                    examples:
                        - "2023-01-01T00:00:00Z"
            required:
                - id
                - sender
                - receiver
                - message
                - timestamp
                - categoryName
                - taskName
                - read
        EncouragementSender:
            type: object
            additionalProperties: false
            properties:
                id:
                    type: string
                    description: Sender's user ID
                    examples:
                        - 507f1f77bcf86cd799439011
                name:
                    type: string
                    description: Sender's name
                    examples:
                        - John Doe
                picture:
                    type: string
                    description: Sender's profile picture URL
                    examples:
                        - https://example.com/avatar.jpg
            required:
                - name
                - picture
                - id
        EnhancedBlueprintReference:
            type: object
            additionalProperties: false
            properties:
                id:
                    type: string
                isPublic:
                    type: boolean
            required:
                - id
                - isPublic
        ErrorDetail:
            type: object
            additionalProperties: false
            properties:
                location:
                    type: string
                    description: Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
                message:
                    type: string
                    description: Error message text
                value:
                    description: The value at the given location
        ErrorModel:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/ErrorModel.json
                    readOnly: true
                detail:
                    type: string
                    description: A human-readable explanation specific to this occurrence of the problem.
                    examples:
                        - Property foo is required but is missing.
                errors:
                    type: array
                    description: Optional list of individual error details
                    items:
                        $ref: '#/components/schemas/ErrorDetail'
                instance:
                    type: string
                    description: A URI reference that identifies the specific occurrence of the problem.
                    format: uri
                    examples:
                        - https://example.com/error-log/abc123
                status:
                    type: integer
                    description: HTTP status code
                    format: int64
                    examples:
                        - 400
                title:
                    type: string
                    description: A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
                    examples:
                        - Bad Request
                type:
                    type: string
                    description: A URI reference to human-readable documentation for the error.
                    format: uri
                    default: about:blank
                    examples:
                        - https://example.com/errors/example
        GenerateImageUploadURLOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/GenerateImageUploadURLOutputBody.json
                    readOnly: true
                key:
                    type: string
                    examples:
                        - profiles/507f1f77bcf86cd799439011/uuid.jpg
                message:
                    type: string
                    examples:
                        - Upload URL generated successfully
                public_url:
                    type: string
                    examples:
                        - https://kindred.nyc3.digitaloceanspaces.com/profiles/507f1f77bcf86cd799439011/uuid.jpg
                upload_url:
                    type: string
                    examples:
                        - https://presigned-upload-url...
            required:
                - upload_url
                - key
                - public_url
                - message
        GetFriendsPostsOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/GetFriendsPostsOutputBody.json
                    readOnly: true
                posts:
                    type: array
                    items:
                        $ref: '#/components/schemas/PostDocumentAPI'
            required:
                - posts
        GetGroupsOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/GetGroupsOutputBody.json
                    readOnly: true
                groups:
                    type: array
                    items:
                        $ref: '#/components/schemas/GroupDocumentAPI'
            required:
                - groups
        GetNotificationsOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/GetNotificationsOutputBody.json
                    readOnly: true
                notifications:
                    type: array
                    items:
                        $ref: '#/components/schemas/NotificationDocument'
                total:
                    type: integer
                    format: int64
                unread_count:
                    type: integer
                    format: int64
            required:
                - notifications
                - unread_count
                - total
        GetPostsByBlueprintOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/GetPostsByBlueprintOutputBody.json
                    readOnly: true
                posts:
                    type: array
                    items:
                        $ref: '#/components/schemas/PostDocumentAPI'
            required:
                - posts
        GetPostsOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/GetPostsOutputBody.json
                    readOnly: true
                posts:
                    type: array
                    items:
                        $ref: '#/components/schemas/PostDocumentAPI'
            required:
                - posts
        GetUserGroupsOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/GetUserGroupsOutputBody.json
                    readOnly: true
                groups:
                    type: array
                    items:
                        $ref: '#/components/schemas/GroupDocumentAPI'
            required:
                - groups
        GroupDocumentAPI:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/GroupDocumentAPI.json
                    readOnly: true
                _id:
                    type: string
                creator:
                    type: string
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserExtendedReference'
                metadata:
                    $ref: '#/components/schemas/GroupMetadata'
                name:
                    type: string
            required:
                - _id
                - name
                - creator
                - members
                - metadata
        GroupMetadata:
            type: object
            additionalProperties: false
            properties:
                createdAt:
                    type: string
                    format: date-time
                isDeleted:
                    type: boolean
                updatedAt:
                    type: string
                    format: date-time
            required:
                - createdAt
                - updatedAt
                - isDeleted
        HealthOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/HealthOutputBody.json
                    readOnly: true
                status:
                    type: string
                    examples:
                        - ok
            required:
                - status
        LoginRequest:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/LoginRequest.json
                    readOnly: true
                email:
                    type: string
                password:
                    type: string
            required:
                - email
                - password
        LoginRequestApple:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/LoginRequestApple.json
                    readOnly: true
                apple_id:
                    type: string
            required:
                - apple_id
        LogoutOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/LogoutOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Logout Successful
            required:
                - message
        MarkAllNotificationsReadOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/MarkAllNotificationsReadOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - All notifications marked as read successfully
            required:
                - message
        MarkCongratulationsReadOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/MarkCongratulationsReadOutputBody.json
                    readOnly: true
                count:
                    type: integer
                    description: Number of congratulations marked as read
                    format: int64
                    examples:
                        - 2
                message:
                    type: string
                    examples:
                        - Congratulations marked as read successfully
            required:
                - message
                - count
        MarkEncouragementsReadOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/MarkEncouragementsReadOutputBody.json
                    readOnly: true
                count:
                    type: integer
                    description: Number of encouragements marked as read
                    format: int64
                    examples:
                        - 2
                message:
                    type: string
                    examples:
                        - Encouragements marked as read successfully
            required:
                - message
                - count
        MarkNotificationsReadOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/MarkNotificationsReadOutputBody.json
                    readOnly: true
                count:
                    type: integer
                    description: Number of notifications marked as read
                    format: int64
                    examples:
                        - 2
                message:
                    type: string
                    examples:
                        - Notifications marked as read successfully
            required:
                - message
                - count
        NotificationDocument:
            type: object
            additionalProperties: false
            properties:
                content:
                    type: string
                id:
                    type: string
                notificationType:
                    type: string
                read:
                    type: boolean
                receiver:
                    type: string
                reference_id:
                    type: string
                time:
                    type: string
                    format: date-time
                user:
                    $ref: '#/components/schemas/UserReference'
            required:
                - id
                - content
                - receiver
                - user
                - time
                - notificationType
                - reference_id
                - read
        PostDocument:
            type: object
            additionalProperties: false
            properties:
                _id:
                    type: string
                blueprint:
                    $ref: '#/components/schemas/EnhancedBlueprintReference'
                caption:
                    type: string
                category:
                    $ref: '#/components/schemas/CategoryExtendedReference'
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/CommentDocument'
                groups:
                    type: array
                    items:
                        type: string
                images:
                    type: array
                    items:
                        type: string
                metadata:
                    $ref: '#/components/schemas/PostMetadata'
                reactions:
                    type: object
                    additionalProperties:
                        type: array
                        items:
                            type: string
                task:
                    $ref: '#/components/schemas/PostTaskExtendedReference'
                user:
                    $ref: '#/components/schemas/UserExtendedReferenceInternal'
            required:
                - _id
                - user
                - images
                - caption
                - reactions
                - comments
                - metadata
        PostDocumentAPI:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/PostDocumentAPI.json
                    readOnly: true
                _id:
                    type: string
                blueprint:
                    $ref: '#/components/schemas/EnhancedBlueprintReference'
                caption:
                    type: string
                category:
                    $ref: '#/components/schemas/CategoryExtendedReference'
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/CommentDocumentAPI'
                groups:
                    type: array
                    items:
                        type: string
                images:
                    type: array
                    items:
                        type: string
                metadata:
                    $ref: '#/components/schemas/PostMetadata'
                reactions:
                    type: object
                    additionalProperties:
                        type: array
                        items:
                            type: string
                task:
                    $ref: '#/components/schemas/PostTaskExtendedReference'
                user:
                    $ref: '#/components/schemas/UserExtendedReference'
            required:
                - _id
                - user
                - images
                - caption
                - reactions
                - comments
                - metadata
        PostMetadata:
            type: object
            additionalProperties: false
            properties:
                createdAt:
                    type: string
                    format: date-time
                isDeleted:
                    type: boolean
                isEdited:
                    type: boolean
                isPublic:
                    type: boolean
                updatedAt:
                    type: string
                    format: date-time
            required:
                - createdAt
                - updatedAt
                - isPublic
                - isDeleted
                - isEdited
        PostTaskExtendedReference:
            type: object
            additionalProperties: false
            properties:
                blueprintId:
                    type: string
                category:
                    $ref: '#/components/schemas/CategoryExtendedReference'
                content:
                    type: string
                id:
                    type: string
            required:
                - id
                - content
                - category
        ProfileDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/ProfileDocument.json
                    readOnly: true
                display_name:
                    type: string
                friends:
                    type: array
                    items:
                        type: string
                handle:
                    type: string
                id:
                    type: string
                points:
                    type: integer
                    format: int64
                posts_made:
                    type: integer
                    format: int64
                profile_picture:
                    type: string
                relationship:
                    $ref: '#/components/schemas/RelationshipInfo'
                streak:
                    type: integer
                    format: int64
                tasks:
                    type: array
                    items:
                        $ref: '#/components/schemas/TaskDocument'
                tasks_complete:
                    type: integer
                    format: int64
            required:
                - id
                - profile_picture
                - display_name
                - handle
                - tasks_complete
                - streak
                - points
                - posts_made
                - friends
        RecurDetails:
            type: object
            additionalProperties: false
            properties:
                behavior:
                    type: string
                daysOfMonth:
                    type: array
                    items:
                        type: integer
                        format: int64
                daysOfWeek:
                    type: array
                    items:
                        type: integer
                        format: int64
                every:
                    type: integer
                    format: int64
                months:
                    type: array
                    items:
                        type: integer
                        format: int64
                reminders:
                    type: array
                    items:
                        type: string
                        format: date-time
        RegisterOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/RegisterOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - User Created Successfully
            required:
                - message
        RegisterRequest:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/RegisterRequest.json
                    readOnly: true
                email:
                    type: string
                password:
                    type: string
            required:
                - email
                - password
        RegisterRequestApple:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/RegisterRequestApple.json
                    readOnly: true
                apple_id:
                    type: string
                email:
                    type: string
            required:
                - apple_id
                - email
        RelationshipInfo:
            type: object
            additionalProperties: false
            properties:
                request_id:
                    type: string
                status:
                    type: string
            required:
                - status
        Reminder:
            type: object
            additionalProperties: false
            properties:
                afterDeadline:
                    type: boolean
                afterStart:
                    type: boolean
                beforeDeadline:
                    type: boolean
                beforeStart:
                    type: boolean
                customMessage:
                    type: string
                sent:
                    type: boolean
                sound:
                    type: string
                triggerTime:
                    type: string
                    format: date-time
                type:
                    type: string
                vibration:
                    type: boolean
            required:
                - triggerTime
                - type
                - sent
                - afterStart
                - beforeStart
                - beforeDeadline
                - afterDeadline
                - vibration
        RemoveMemberOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/RemoveMemberOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Member removed successfully
            required:
                - message
        RemoveMemberParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/RemoveMemberParams.json
                    readOnly: true
                userId:
                    type: string
            required:
                - userId
        RenameWorkspaceInputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/RenameWorkspaceInputBody.json
                    readOnly: true
                newName:
                    type: string
                    examples:
                        - new-workspace
            required:
                - newName
        RenameWorkspaceOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/RenameWorkspaceOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Workspace renamed successfully
            required:
                - message
        SafeUser:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/SafeUser.json
                    readOnly: true
                _id:
                    type: string
                categories:
                    type: array
                    items:
                        $ref: '#/components/schemas/CategoryDocument'
                congratulations:
                    type: integer
                    format: int64
                display_name:
                    type: string
                encouragements:
                    type: integer
                    format: int64
                friends:
                    type: array
                    items:
                        type: string
                handle:
                    type: string
                points:
                    type: integer
                    format: int64
                posts_made:
                    type: integer
                    format: int64
                profile_picture:
                    type: string
                recent_activity:
                    type: array
                    items:
                        $ref: '#/components/schemas/ActivityDocument'
                streak:
                    type: integer
                    format: int64
                streakEligible:
                    type: boolean
                tasks_complete:
                    type: number
                    format: double
            required:
                - _id
                - display_name
                - handle
                - profile_picture
                - categories
                - friends
                - tasks_complete
                - recent_activity
                - encouragements
                - congratulations
                - streak
                - streakEligible
                - points
                - posts_made
        SubscribeToBlueprintOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/SubscribeToBlueprintOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Subscribed to blueprint successfully
            required:
                - message
        TaskDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/TaskDocument.json
                    readOnly: true
                active:
                    type: boolean
                blueprintId:
                    type: string
                categoryID:
                    type: string
                checklist:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChecklistItem'
                content:
                    type: string
                deadline:
                    type: string
                    format: date-time
                id:
                    type: string
                lastEdited:
                    type: string
                    format: date-time
                notes:
                    type: string
                priority:
                    type: integer
                    format: int64
                public:
                    type: boolean
                recurDetails:
                    $ref: '#/components/schemas/RecurDetails'
                recurFrequency:
                    type: string
                recurType:
                    type: string
                recurring:
                    type: boolean
                reminders:
                    type: array
                    items:
                        $ref: '#/components/schemas/Reminder'
                startDate:
                    type: string
                    format: date-time
                startTime:
                    type: string
                    format: date-time
                templateID:
                    type: string
                timestamp:
                    type: string
                    format: date-time
                userID:
                    type: string
                value:
                    type: number
                    format: double
            required:
                - id
                - priority
                - content
                - value
                - recurring
                - public
                - active
                - timestamp
                - lastEdited
                - startDate
        TemplateTaskDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/TemplateTaskDocument.json
                    readOnly: true
                blueprintId:
                    type: string
                categoryID:
                    type: string
                checklist:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChecklistItem'
                content:
                    type: string
                deadline:
                    type: string
                    format: date-time
                id:
                    type: string
                lastEdited:
                    type: string
                    format: date-time
                lastGenerated:
                    type: string
                    format: date-time
                nextGenerated:
                    type: string
                    format: date-time
                notes:
                    type: string
                priority:
                    type: integer
                    format: int64
                public:
                    type: boolean
                recurDetails:
                    $ref: '#/components/schemas/RecurDetails'
                recurFrequency:
                    type: string
                recurType:
                    type: string
                reminders:
                    type: array
                    items:
                        $ref: '#/components/schemas/Reminder'
                startDate:
                    type: string
                    format: date-time
                startTime:
                    type: string
                    format: date-time
                value:
                    type: number
                    format: double
            required:
                - id
                - categoryID
                - priority
                - content
                - value
                - public
                - lastEdited
                - recurDetails
                - lastGenerated
                - nextGenerated
                - recurType
        TestOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/TestOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Authorized!
            required:
                - message
        UnsubscribeFromBlueprintOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UnsubscribeFromBlueprintOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Unsubscribed from blueprint successfully
            required:
                - message
        UpdateBlueprintDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateBlueprintDocument.json
                    readOnly: true
                banner:
                    type: string
                    description: New banner image URL
                    examples:
                        - https://example.com/new-banner.jpg
                categories:
                    type: array
                    description: Updated categories associated with the blueprint
                    examples:
                        - - id: 507f1f77bcf86cd799439011
                            lastEdited: "2023-01-01T00:00:00Z"
                            name: Productivity
                            user: 507f1f77bcf86cd799439012
                            workspaceName: Personal
                    items:
                        $ref: '#/components/schemas/CategoryDocument'
                category:
                    type: string
                    description: Updated category of the blueprint
                    examples:
                        - productivity
                description:
                    type: string
                    description: New description
                    examples:
                        - An updated comprehensive morning routine
                duration:
                    type: string
                    description: Updated expected duration
                    examples:
                        - 45m
                name:
                    type: string
                    description: New name for the blueprint
                    examples:
                        - Updated Morning Routine
                subscribers:
                    type: array
                    description: Updated subscriber list
                    examples:
                        - - 507f1f77bcf86cd799439012
                    items:
                        type: string
                tags:
                    type: array
                    description: Updated tags
                    examples:
                        - - productivity
                          - morning
                          - health
                    items:
                        type: string
                timestamp:
                    type: string
                    description: Update timestamp
                    format: date-time
                    examples:
                        - "2023-01-02T00:00:00Z"
        UpdateBlueprintOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateBlueprintOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Blueprint updated successfully
            required:
                - message
        UpdateCategoryDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateCategoryDocument.json
                    readOnly: true
                blueprintId:
                    type: string
                isBlueprint:
                    type: boolean
                name:
                    type: string
        UpdateCategoryOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateCategoryOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Category updated successfully
            required:
                - message
        UpdateCongratulationDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateCongratulationDocument.json
                    readOnly: true
                categoryName:
                    type: string
                    description: New category name
                    examples:
                        - Updated Work
                message:
                    type: string
                    description: New message
                    examples:
                        - Updated congratulation message
                read:
                    type: boolean
                    description: Read status
                    examples:
                        - true
                taskName:
                    type: string
                    description: New task name
                    examples:
                        - Updated task name
                timestamp:
                    type: string
                    description: Update timestamp
                    format: date-time
                    examples:
                        - "2023-01-02T00:00:00Z"
        UpdateCongratulationOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateCongratulationOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Congratulation updated successfully
            required:
                - message
        UpdateConnectionDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateConnectionDocument.json
                    readOnly: true
                accepted_at:
                    type: string
                    format: date-time
                status:
                    type: string
        UpdateConnectionOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateConnectionOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Connection updated successfully
            required:
                - message
        UpdateEncouragementDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateEncouragementDocument.json
                    readOnly: true
                categoryName:
                    type: string
                    description: New category name
                    examples:
                        - Updated Work
                message:
                    type: string
                    description: New message
                    examples:
                        - Updated encouragement message
                read:
                    type: boolean
                    description: Read status
                    examples:
                        - true
                taskName:
                    type: string
                    description: New task name
                    examples:
                        - Updated task name
                timestamp:
                    type: string
                    description: Update timestamp
                    format: date-time
                    examples:
                        - "2023-01-02T00:00:00Z"
        UpdateEncouragementOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateEncouragementOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Encouragement updated successfully
            required:
                - message
        UpdateGroupOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateGroupOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Group updated successfully
            required:
                - message
        UpdateGroupParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateGroupParams.json
                    readOnly: true
                name:
                    type: string
        UpdatePostOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdatePostOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Post updated successfully
            required:
                - message
        UpdatePostParams:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdatePostParams.json
                    readOnly: true
                caption:
                    type: string
                isPublic:
                    type: boolean
        UpdateProfileDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateProfileDocument.json
                    readOnly: true
                display_name:
                    type: string
                handle:
                    type: string
                profile_picture:
                    type: string
        UpdateProfileOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateProfileOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Profile updated successfully
            required:
                - message
        UpdatePushTokenOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdatePushTokenOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Push Token Updated Successfully
            required:
                - message
        UpdatePushTokenRequest:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdatePushTokenRequest.json
                    readOnly: true
                push_token:
                    type: string
            required:
                - push_token
        UpdateTaskChecklistDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateTaskChecklistDocument.json
                    readOnly: true
                checklist:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChecklistItem'
            required:
                - checklist
        UpdateTaskChecklistOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateTaskChecklistOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Task checklist updated successfully
            required:
                - message
        UpdateTaskDeadlineDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateTaskDeadlineDocument.json
                    readOnly: true
                deadline:
                    type: string
                    format: date-time
        UpdateTaskDeadlineOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateTaskDeadlineOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Task deadline updated successfully
            required:
                - message
        UpdateTaskDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateTaskDocument.json
                    readOnly: true
                active:
                    type: boolean
                blueprintId:
                    type: string
                checklist:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChecklistItem'
                content:
                    type: string
                deadline:
                    type: string
                    format: date-time
                notes:
                    type: string
                priority:
                    type: integer
                    format: int64
                public:
                    type: boolean
                recurDetails:
                    $ref: '#/components/schemas/RecurDetails'
                recurring:
                    type: boolean
                reminders:
                    type: array
                    items:
                        $ref: '#/components/schemas/Reminder'
                startDate:
                    type: string
                    format: date-time
                startTime:
                    type: string
                    format: date-time
                value:
                    type: number
                    format: double
            required:
                - priority
                - content
                - value
                - recurring
                - recurDetails
                - public
                - active
        UpdateTaskNotesDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateTaskNotesDocument.json
                    readOnly: true
                notes:
                    type: string
            required:
                - notes
        UpdateTaskNotesOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateTaskNotesOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Task notes updated successfully
            required:
                - message
        UpdateTaskOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateTaskOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Task updated successfully
            required:
                - message
        UpdateTaskReminderDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateTaskReminderDocument.json
                    readOnly: true
                reminders:
                    type: array
                    items:
                        $ref: '#/components/schemas/Reminder'
        UpdateTaskReminderOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateTaskReminderOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Task reminders updated successfully
            required:
                - message
        UpdateTaskStartDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateTaskStartDocument.json
                    readOnly: true
                startDate:
                    type: string
                    format: date-time
                startTime:
                    type: string
                    format: date-time
        UpdateTaskStartOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/UpdateTaskStartOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Task start date/time updated successfully
            required:
                - message
        UserExtendedReference:
            type: object
            additionalProperties: false
            properties:
                _id:
                    type: string
                    description: User ID
                    examples:
                        - 507f1f77bcf86cd799439011
                display_name:
                    type: string
                    description: User display name
                    examples:
                        - John Doe
                handle:
                    type: string
                    description: User handle
                    examples:
                        - johndoe
                profile_picture:
                    type: string
                    description: Profile picture URL
                    examples:
                        - https://example.com/avatar.jpg
            required:
                - _id
                - display_name
                - handle
                - profile_picture
        UserExtendedReferenceInternal:
            type: object
            additionalProperties: false
            properties:
                DisplayName:
                    type: string
                Handle:
                    type: string
                ID:
                    type: string
                ProfilePicture:
                    type: string
            required:
                - ID
                - DisplayName
                - Handle
                - ProfilePicture
        UserReference:
            type: object
            additionalProperties: false
            properties:
                display_name:
                    type: string
                handle:
                    type: string
                id:
                    type: string
                profile_picture:
                    type: string
            required:
                - id
                - display_name
                - handle
                - profile_picture
        WaitlistDocument:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/WaitlistDocument.json
                    readOnly: true
                email:
                    type: string
                    description: User email address
                    examples:
                        - user@example.com
                id:
                    type: string
                    description: Unique waitlist entry identifier
                    examples:
                        - 507f1f77bcf86cd799439011
                name:
                    type: string
                    description: User full name
                    examples:
                        - John Doe
                timestamp:
                    type: string
                    description: Entry creation timestamp
                    format: date-time
                    examples:
                        - "2023-01-01T00:00:00Z"
            required:
                - id
                - email
                - name
                - timestamp
        WelcomeOutputBody:
            type: object
            additionalProperties: false
            properties:
                $schema:
                    type: string
                    description: A URL to the JSON Schema for this object.
                    format: uri
                    examples:
                        - https://example.com/schemas/WelcomeOutputBody.json
                    readOnly: true
                message:
                    type: string
                    examples:
                        - Welcome to Kindred!
            required:
                - message
        WorkspaceResult:
            type: object
            additionalProperties: false
            properties:
                categories:
                    type: array
                    items:
                        $ref: '#/components/schemas/CategoryDocument'
                name:
                    type: string
            required:
                - name
                - categories
