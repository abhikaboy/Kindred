components:
  schemas:
    ActivateTaskOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/ActivateTaskOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Task activation status updated successfully
          type: string
      required:
        - message
      type: object
    ActivityDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/ActivityDocument.json'
          format: uri
          readOnly: true
          type: string
        field1:
          type: string
        id:
          type: string
        picture:
          type:
            - string
            - 'null'
        timestamp:
          format: date-time
          type: string
      required:
        - id
        - field1
        - picture
        - timestamp
      type: object
    BlueprintDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/BlueprintDocument.json'
          format: uri
          readOnly: true
          type: string
        banner:
          description: Banner image URL
          examples:
            - 'https://example.com/banner.jpg'
          type: string
        description:
          description: Description of the blueprint
          examples:
            - A comprehensive morning routine
          type: string
        duration:
          description: Expected duration
          examples:
            - 30m
          type: string
        id:
          description: Unique identifier for the blueprint
          examples:
            - 507f1f77bcf86cd799439011
          type: string
        name:
          description: Name of the blueprint
          examples:
            - Morning Routine
          type: string
        owner:
          $ref: '#/components/schemas/UserExtendedReference'
          description: Owner information
        subscribers:
          description: List of subscriber user IDs
          examples:
            - - 507f1f77bcf86cd799439012
          items:
            type: string
          type:
            - array
            - 'null'
        subscribersCount:
          description: Number of subscribers
          examples:
            - 42
          format: int64
          type: integer
        tags:
          description: Tags associated with the blueprint
          examples:
            - - productivity
              - morning
          items:
            type: string
          type:
            - array
            - 'null'
        timestamp:
          description: Creation timestamp
          examples:
            - '2023-01-01T00:00:00Z'
          format: date-time
          type: string
      required:
        - id
        - banner
        - name
        - tags
        - description
        - duration
        - subscribers
        - owner
        - subscribersCount
        - timestamp
      type: object
    CategoryDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/CategoryDocument.json'
          format: uri
          readOnly: true
          type: string
        id:
          type: string
        lastEdited:
          format: date-time
          type: string
        name:
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/TaskDocument'
          type:
            - array
            - 'null'
        user:
          type: string
        workspaceName:
          type: string
      required:
        - id
        - name
        - workspaceName
        - lastEdited
        - tasks
        - user
      type: object
    ChecklistItem:
      additionalProperties: false
      properties:
        completed:
          type: boolean
        content:
          type: string
        order:
          format: int64
          type: integer
      required:
        - content
        - completed
        - order
      type: object
    CompleteTaskDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/CompleteTaskDocument.json'
          format: uri
          readOnly: true
          type: string
        timeCompleted:
          type: string
        timeTaken:
          type: string
      required:
        - timeCompleted
        - timeTaken
      type: object
    CompleteTaskOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/CompleteTaskOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Task completed successfully
          type: string
      required:
        - message
      type: object
    ConnectionDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/ConnectionDocument.json'
          format: uri
          readOnly: true
          type: string
        id:
          description: Connection ID
          examples:
            - 507f1f77bcf86cd799439011
          type: string
        reciever:
          description: Receiver user ID
          examples:
            - 507f1f77bcf86cd799439012
          type: string
        requester:
          $ref: '#/components/schemas/ConnectionUser'
          description: Connection requester information
        timestamp:
          description: Connection timestamp
          examples:
            - '2023-01-01T00:00:00Z'
          format: date-time
          type: string
      required:
        - id
        - requester
        - reciever
        - timestamp
      type: object
    ConnectionUser:
      additionalProperties: false
      properties:
        _id:
          description: User ID
          examples:
            - 507f1f77bcf86cd799439011
          type: string
        handle:
          description: User handle
          examples:
            - johndoe
          type: string
        name:
          description: User name
          examples:
            - John Doe
          type: string
        picture:
          description: Profile picture URL
          examples:
            - 'https://example.com/avatar.jpg'
          type:
            - string
            - 'null'
      required:
        - _id
        - picture
        - name
        - handle
      type: object
    CreateActivityParams:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/CreateActivityParams.json'
          format: uri
          readOnly: true
          type: string
        field1:
          type: string
        field2:
          type: string
        picture:
          type:
            - string
            - 'null'
      required:
        - field1
        - field2
        - picture
      type: object
    CreateBlueprintParams:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/CreateBlueprintParams.json'
          format: uri
          readOnly: true
          type: string
        banner:
          description: Banner image URL for the blueprint
          examples:
            - 'https://example.com/banner.jpg'
          type: string
        description:
          description: Description of the blueprint
          examples:
            - A comprehensive morning routine to start your day right
          type: string
        duration:
          description: Expected duration to complete the blueprint
          examples:
            - 30m
          type: string
        name:
          description: Name of the blueprint
          examples:
            - Morning Routine
          type: string
        tags:
          description: Tags associated with the blueprint
          examples:
            - - productivity
              - morning
          items:
            type: string
          type:
            - array
            - 'null'
      required:
        - banner
        - name
        - tags
        - description
        - duration
      type: object
    CreateCategoryParams:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/CreateCategoryParams.json'
          format: uri
          readOnly: true
          type: string
        name:
          type: string
        workspaceName:
          type: string
      type: object
    CreateConnectionParams:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/CreateConnectionParams.json'
          format: uri
          readOnly: true
          type: string
        reciever:
          description: Receiver user ID
          examples:
            - 507f1f77bcf86cd799439012
          type: string
        requester:
          $ref: '#/components/schemas/ConnectionUser'
          description: Connection requester information
      required:
        - requester
        - reciever
      type: object
    CreatePostParams:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/CreatePostParams.json'
          format: uri
          readOnly: true
          type: string
        field1:
          type: string
        field2:
          type: string
        picture:
          type:
            - string
            - 'null'
      required:
        - field1
        - field2
        - picture
      type: object
    CreateTaskParams:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/CreateTaskParams.json'
          format: uri
          readOnly: true
          type: string
        active:
          type: boolean
        checklist:
          items:
            $ref: '#/components/schemas/ChecklistItem'
          type:
            - array
            - 'null'
        content:
          type: string
        deadline:
          format: date-time
          type: string
        notes:
          type: string
        priority:
          format: int64
          type: integer
        public:
          type: boolean
        recurDetails:
          $ref: '#/components/schemas/RecurDetails'
        recurFrequency:
          type: string
        recurring:
          type: boolean
        reminders:
          items:
            $ref: '#/components/schemas/Reminder'
          type:
            - array
            - 'null'
        startDate:
          format: date-time
          type: string
        startTime:
          format: date-time
          type: string
        value:
          format: double
          type: number
      required:
        - priority
        - content
        - value
        - recurring
        - public
        - active
      type: object
    CreateWaitlistParams:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/CreateWaitlistParams.json'
          format: uri
          readOnly: true
          type: string
        email:
          description: User email address
          examples:
            - user@example.com
          type: string
        name:
          description: User full name
          examples:
            - John Doe
          type: string
      required:
        - email
        - name
      type: object
    DeleteActivityOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/DeleteActivityOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Activity deleted successfully
          type: string
      required:
        - message
      type: object
    DeleteBlueprintOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/DeleteBlueprintOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Blueprint deleted successfully
          type: string
      required:
        - message
      type: object
    DeleteCategoryOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/DeleteCategoryOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Category deleted successfully
          type: string
      required:
        - message
      type: object
    DeleteConnectionOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/DeleteConnectionOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Connection deleted successfully
          type: string
      required:
        - message
      type: object
    DeletePostOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/DeletePostOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Post deleted successfully
          type: string
      required:
        - message
      type: object
    DeleteProfileOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/DeleteProfileOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Profile deleted successfully
          type: string
      required:
        - message
      type: object
    DeleteTaskOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/DeleteTaskOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Task deleted successfully
          type: string
      required:
        - message
      type: object
    DeleteWaitlistOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/DeleteWaitlistOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Waitlist entry deleted successfully
          type: string
        status:
          examples:
            - success
          type: string
      required:
        - status
        - message
      type: object
    DeleteWorkspaceOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/DeleteWorkspaceOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Workspace deleted successfully
          type: string
      required:
        - message
      type: object
    ErrorDetail:
      additionalProperties: false
      properties:
        location:
          description: >-
            Where the error occurred, e.g. 'body.items[3].tags' or
            'path.thing-id'
          type: string
        message:
          description: Error message text
          type: string
        value:
          description: The value at the given location
      type: object
    ErrorModel:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/ErrorModel.json'
          format: uri
          readOnly: true
          type: string
        detail:
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
          examples:
            - Property foo is required but is missing.
          type: string
        errors:
          description: Optional list of individual error details
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type:
            - array
            - 'null'
        instance:
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.
          examples:
            - 'https://example.com/error-log/abc123'
          format: uri
          type: string
        status:
          description: HTTP status code
          examples:
            - 400
          format: int64
          type: integer
        title:
          description: >-
            A short, human-readable summary of the problem type. This value
            should not change between occurrences of the error.
          examples:
            - Bad Request
          type: string
        type:
          default: 'about:blank'
          description: A URI reference to human-readable documentation for the error.
          examples:
            - 'https://example.com/errors/example'
          format: uri
          type: string
      type: object
    HealthOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/HealthOutputBody.json'
          format: uri
          readOnly: true
          type: string
        status:
          examples:
            - ok
          type: string
      required:
        - status
      type: object
    LoginRequest:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/LoginRequest.json'
          format: uri
          readOnly: true
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
      type: object
    LoginRequestApple:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/LoginRequestApple.json'
          format: uri
          readOnly: true
          type: string
        apple_id:
          type: string
      required:
        - apple_id
      type: object
    LogoutOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/LogoutOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Logout Successful
          type: string
      required:
        - message
      type: object
    PostDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/PostDocument.json'
          format: uri
          readOnly: true
          type: string
        field1:
          type: string
        field2:
          type: string
        id:
          type: string
        picture:
          type:
            - string
            - 'null'
        timestamp:
          format: date-time
          type: string
      required:
        - id
        - field1
        - field2
        - picture
        - timestamp
      type: object
    ProfileDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/ProfileDocument.json'
          format: uri
          readOnly: true
          type: string
        display_name:
          type: string
        friends:
          items:
            type: string
          type:
            - array
            - 'null'
        handle:
          type: string
        id:
          type: string
        profile_picture:
          type:
            - string
            - 'null'
        tasks_complete:
          format: int64
          type: integer
      required:
        - id
        - profile_picture
        - display_name
        - handle
        - tasks_complete
        - friends
      type: object
    RecurDetails:
      additionalProperties: false
      properties:
        behavior:
          type: string
        daysOfMonth:
          items:
            format: int64
            type: integer
          type:
            - array
            - 'null'
        daysOfWeek:
          items:
            format: int64
            type: integer
          type:
            - array
            - 'null'
        every:
          format: int64
          type: integer
        months:
          items:
            format: int64
            type: integer
          type:
            - array
            - 'null'
        reminders:
          items:
            format: date-time
            type:
              - string
              - 'null'
          type:
            - array
            - 'null'
      type: object
    RegisterOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/RegisterOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - User Created Successfully
          type: string
      required:
        - message
      type: object
    RegisterRequest:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/RegisterRequest.json'
          format: uri
          readOnly: true
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
      type: object
    RegisterRequestApple:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/RegisterRequestApple.json'
          format: uri
          readOnly: true
          type: string
        apple_id:
          type: string
        email:
          type: string
      required:
        - apple_id
        - email
      type: object
    Reminder:
      additionalProperties: false
      properties:
        afterStart:
          type: boolean
        beforeDeadline:
          type: boolean
        beforeStart:
          type: boolean
        sent:
          type: boolean
        triggerTime:
          format: date-time
          type: string
        type:
          type: string
      required:
        - triggerTime
        - type
        - sent
        - afterStart
        - beforeStart
        - beforeDeadline
      type: object
    SafeUser:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/SafeUser.json'
          format: uri
          readOnly: true
          type: string
        _id:
          type: string
        categories:
          items:
            $ref: '#/components/schemas/CategoryDocument'
          type:
            - array
            - 'null'
        display_name:
          type: string
        friends:
          items:
            type: string
          type:
            - array
            - 'null'
        handle:
          type: string
        profile_picture:
          type: string
        recent_activity:
          items:
            $ref: '#/components/schemas/ActivityDocument'
          type:
            - array
            - 'null'
        tasks_complete:
          format: double
          type: number
      required:
        - _id
        - display_name
        - handle
        - profile_picture
        - categories
        - friends
        - tasks_complete
        - recent_activity
      type: object
    SubscribeToBlueprintOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/SubscribeToBlueprintOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Subscribed to blueprint successfully
          type: string
      required:
        - message
      type: object
    TaskDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/TaskDocument.json'
          format: uri
          readOnly: true
          type: string
        active:
          type: boolean
        categoryID:
          type: string
        checklist:
          items:
            $ref: '#/components/schemas/ChecklistItem'
          type:
            - array
            - 'null'
        content:
          type: string
        deadline:
          format: date-time
          type: string
        id:
          type: string
        lastEdited:
          format: date-time
          type: string
        notes:
          type: string
        priority:
          format: int64
          type: integer
        public:
          type: boolean
        recurDetails:
          $ref: '#/components/schemas/RecurDetails'
        recurFrequency:
          type: string
        recurType:
          type: string
        recurring:
          type: boolean
        reminders:
          items:
            $ref: '#/components/schemas/Reminder'
          type:
            - array
            - 'null'
        startDate:
          format: date-time
          type:
            - string
            - 'null'
        startTime:
          format: date-time
          type: string
        templateID:
          type: string
        timestamp:
          format: date-time
          type: string
        userID:
          type: string
        value:
          format: double
          type: number
      required:
        - id
        - priority
        - content
        - value
        - recurring
        - public
        - active
        - timestamp
        - lastEdited
        - startDate
      type: object
    TemplateTaskDocument:
      additionalProperties: false
      properties:
        categoryID:
          type: string
        checklist:
          items:
            $ref: '#/components/schemas/ChecklistItem'
          type:
            - array
            - 'null'
        content:
          type: string
        deadline:
          format: date-time
          type: string
        id:
          type: string
        lastEdited:
          format: date-time
          type: string
        lastGenerated:
          format: date-time
          type:
            - string
            - 'null'
        nextGenerated:
          format: date-time
          type:
            - string
            - 'null'
        notes:
          type: string
        priority:
          format: int64
          type: integer
        public:
          type: boolean
        recurDetails:
          $ref: '#/components/schemas/RecurDetails'
        recurFrequency:
          type: string
        recurType:
          type: string
        reminders:
          items:
            $ref: '#/components/schemas/Reminder'
          type:
            - array
            - 'null'
        startDate:
          format: date-time
          type: string
        startTime:
          format: date-time
          type: string
        value:
          format: double
          type: number
      required:
        - id
        - categoryID
        - priority
        - content
        - value
        - public
        - lastEdited
        - recurDetails
        - lastGenerated
        - nextGenerated
        - recurType
      type: object
    TestOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/TestOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Authorized!
          type: string
      required:
        - message
      type: object
    UnsubscribeFromBlueprintOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - >-
              https://example.com/schemas/UnsubscribeFromBlueprintOutputBody.json
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Unsubscribed from blueprint successfully
          type: string
      required:
        - message
      type: object
    UpdateActivityDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateActivityDocument.json'
          format: uri
          readOnly: true
          type: string
        field1:
          type: string
        field2:
          type: string
        picture:
          type: string
      type: object
    UpdateActivityOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateActivityOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Activity updated successfully
          type: string
      required:
        - message
      type: object
    UpdateBlueprintDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateBlueprintDocument.json'
          format: uri
          readOnly: true
          type: string
        banner:
          description: New banner image URL
          examples:
            - 'https://example.com/new-banner.jpg'
          type: string
        description:
          description: New description
          examples:
            - An updated comprehensive morning routine
          type: string
        duration:
          description: Updated expected duration
          examples:
            - 45m
          type: string
        name:
          description: New name for the blueprint
          examples:
            - Updated Morning Routine
          type: string
        subscribers:
          description: Updated subscriber list
          examples:
            - - 507f1f77bcf86cd799439012
          items:
            type: string
          type: array
        tags:
          description: Updated tags
          examples:
            - - productivity
              - morning
              - health
          items:
            type: string
          type: array
        timestamp:
          description: Update timestamp
          examples:
            - '2023-01-02T00:00:00Z'
          format: date-time
          type: string
      type: object
    UpdateBlueprintOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateBlueprintOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Blueprint updated successfully
          type: string
      required:
        - message
      type: object
    UpdateCategoryDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateCategoryDocument.json'
          format: uri
          readOnly: true
          type: string
        name:
          type: string
      type: object
    UpdateConnectionDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateConnectionDocument.json'
          format: uri
          readOnly: true
          type: string
      type: object
    UpdateConnectionOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateConnectionOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Connection updated successfully
          type: string
      required:
        - message
      type: object
    UpdatePostDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdatePostDocument.json'
          format: uri
          readOnly: true
          type: string
        field1:
          type: string
        field2:
          type: string
        picture:
          type: string
      type: object
    UpdatePostOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdatePostOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Post updated successfully
          type: string
      required:
        - message
      type: object
    UpdateProfileDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateProfileDocument.json'
          format: uri
          readOnly: true
          type: string
        display_name:
          type: string
        handle:
          type: string
        profile_picture:
          type: string
      type: object
    UpdateProfileOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateProfileOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Profile updated successfully
          type: string
      required:
        - message
      type: object
    UpdatePushTokenOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdatePushTokenOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Push Token Updated Successfully
          type: string
      required:
        - message
      type: object
    UpdatePushTokenRequest:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdatePushTokenRequest.json'
          format: uri
          readOnly: true
          type: string
        push_token:
          type: string
      required:
        - push_token
      type: object
    UpdateTaskChecklistDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateTaskChecklistDocument.json'
          format: uri
          readOnly: true
          type: string
        checklist:
          items:
            $ref: '#/components/schemas/ChecklistItem'
          type:
            - array
            - 'null'
      required:
        - checklist
      type: object
    UpdateTaskChecklistOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateTaskChecklistOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Task checklist updated successfully
          type: string
      required:
        - message
      type: object
    UpdateTaskDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateTaskDocument.json'
          format: uri
          readOnly: true
          type: string
        active:
          type: boolean
        checklist:
          items:
            $ref: '#/components/schemas/ChecklistItem'
          type:
            - array
            - 'null'
        content:
          type: string
        notes:
          type: string
        priority:
          format: int64
          type: integer
        public:
          type: boolean
        recurDetails:
          $ref: '#/components/schemas/RecurDetails'
        recurring:
          type: boolean
        value:
          format: double
          type: number
      required:
        - priority
        - content
        - value
        - recurring
        - recurDetails
        - public
        - active
      type: object
    UpdateTaskNotesDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateTaskNotesDocument.json'
          format: uri
          readOnly: true
          type: string
        notes:
          type: string
      required:
        - notes
      type: object
    UpdateTaskNotesOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateTaskNotesOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Task notes updated successfully
          type: string
      required:
        - message
      type: object
    UpdateTaskOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/UpdateTaskOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Task updated successfully
          type: string
      required:
        - message
      type: object
    UserExtendedReference:
      additionalProperties: false
      properties:
        _id:
          description: User ID
          examples:
            - 507f1f77bcf86cd799439011
          type: string
        display_name:
          description: User display name
          examples:
            - John Doe
          type: string
        handle:
          description: User handle
          examples:
            - johndoe
          type: string
        profile_picture:
          description: Profile picture URL
          examples:
            - 'https://example.com/avatar.jpg'
          type: string
      required:
        - _id
        - display_name
        - handle
        - profile_picture
      type: object
    WaitlistDocument:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/WaitlistDocument.json'
          format: uri
          readOnly: true
          type: string
        email:
          description: User email address
          examples:
            - user@example.com
          type: string
        id:
          description: Unique waitlist entry identifier
          examples:
            - 507f1f77bcf86cd799439011
          type: string
        name:
          description: User full name
          examples:
            - John Doe
          type: string
        timestamp:
          description: Entry creation timestamp
          examples:
            - '2023-01-01T00:00:00Z'
          format: date-time
          type: string
      required:
        - id
        - email
        - name
        - timestamp
      type: object
    WelcomeOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - 'https://example.com/schemas/WelcomeOutputBody.json'
          format: uri
          readOnly: true
          type: string
        message:
          examples:
            - Welcome to Kindred!
          type: string
      required:
        - message
      type: object
    WorkspaceResult:
      additionalProperties: false
      properties:
        categories:
          items:
            $ref: '#/components/schemas/CategoryDocument'
          type:
            - array
            - 'null'
        name:
          type: string
      required:
        - name
        - categories
      type: object
info:
  description: Kindred API built with Huma v2 and Fiber
  title: Kindred API
  version: 1.0.0
openapi: 3.1.0
paths:
  /v1/activity:
    get:
      description: Retrieve all activity records
      operationId: get-activities
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActivityDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get all activities
      tags:
        - activities
    post:
      description: Create a new activity record
      operationId: create-activity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActivityParams'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Create a new activity
      tags:
        - activities
  '/v1/activity/{id}':
    delete:
      description: Delete an activity record
      operationId: delete-activity
      parameters:
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActivityOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Delete activity
      tags:
        - activities
    get:
      description: Retrieve a specific activity by its ID
      operationId: get-activity
      parameters:
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get activity by ID
      tags:
        - activities
    patch:
      description: Update an activity record
      operationId: update-activity
      parameters:
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActivityDocument'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActivityOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Update activity
      tags:
        - activities
  /v1/auth/login:
    post:
      description: Authenticate user with email and password
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SafeUser'
          description: OK
          headers:
            access_token:
              schema:
                type: string
            refresh_token:
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: User login
      tags:
        - auth
  /v1/auth/login/apple:
    post:
      description: Authenticate user with Apple ID
      operationId: login-apple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestApple'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SafeUser'
          description: OK
          headers:
            access_token:
              schema:
                type: string
            refresh_token:
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Login with Apple
      tags:
        - auth
  /v1/auth/logout:
    post:
      description: Logout user and invalidate tokens
      operationId: logout
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: User logout
      tags:
        - auth
  /v1/auth/register:
    post:
      description: Register a new user account
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterOutputBody'
          description: OK
          headers:
            access_token:
              schema:
                type: string
            refresh_token:
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: User registration
      tags:
        - auth
  /v1/auth/register/apple:
    post:
      description: Register a new user with Apple ID
      operationId: register-apple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestApple'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterOutputBody'
          description: OK
          headers:
            access_token:
              schema:
                type: string
            refresh_token:
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Register with Apple
      tags:
        - auth
  /v1/blueprints:
    get:
      description: Retrieve all blueprints
      operationId: get-blueprints
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BlueprintDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get all blueprints
      tags:
        - blueprints
  '/v1/blueprints/{id}':
    get:
      description: Retrieve a specific blueprint by its ID
      operationId: get-blueprint
      parameters:
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get blueprint by ID
      tags:
        - blueprints
  /v1/categories:
    get:
      description: Retrieve all categories
      operationId: get-categories
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CategoryDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get all categories
      tags:
        - categories
  '/v1/categories/{id}':
    get:
      description: Retrieve a specific category by its ID
      operationId: get-category
      parameters:
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get category by ID
      tags:
        - categories
  /v1/health:
    get:
      description: Returns the health status of the API
      operationId: get-health
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Health check endpoint
      tags:
        - health
  /v1/profiles:
    get:
      description: Retrieve all user profiles
      operationId: get-profiles
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProfileDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get all profiles
      tags:
        - profiles
  '/v1/profiles/email/{email}':
    get:
      description: Retrieve a user profile by email address
      operationId: get-profile-by-email
      parameters:
        - example: user@example.com
          in: path
          name: email
          required: true
          schema:
            examples:
              - user@example.com
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get profile by email
      tags:
        - profiles
  '/v1/profiles/phone/{phone}':
    get:
      description: Retrieve a user profile by phone number
      operationId: get-profile-by-phone
      parameters:
        - example: '+1234567890'
          in: path
          name: phone
          required: true
          schema:
            examples:
              - '+1234567890'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get profile by phone
      tags:
        - profiles
  /v1/profiles/search:
    get:
      description: Search for user profiles by query string
      operationId: search-profiles
      parameters:
        - example: john
          explode: false
          in: query
          name: query
          schema:
            examples:
              - john
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProfileDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Search profiles
      tags:
        - profiles
  '/v1/profiles/{id}':
    delete:
      description: Delete a user profile
      operationId: delete-profile
      parameters:
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProfileOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Delete profile
      tags:
        - profiles
    get:
      description: Retrieve a specific user profile by its ID
      operationId: get-profile
      parameters:
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get profile by ID
      tags:
        - profiles
    patch:
      description: Update a user profile
      operationId: update-profile
      parameters:
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileDocument'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfileOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Update profile
      tags:
        - profiles
  /v1/tasks/:
    get:
      description: Retrieve all task records
      operationId: get-tasks
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get all tasks
      tags:
        - tasks
  '/v1/tasks/active/{id}':
    get:
      description: Retrieve all active tasks for a user
      operationId: get-active-tasks
      parameters:
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get active tasks
      tags:
        - tasks
  '/v1/tasks/{id}':
    get:
      description: Retrieve a specific task by its ID
      operationId: get-task
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get task by ID
      tags:
        - tasks
  /v1/user:
    get:
      description: Test endpoint for authenticated users
      operationId: auth-test
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Test authentication
      tags:
        - auth
  /v1/user/:
    get:
      description: Test endpoint for authenticated users
      operationId: auth-test-slash
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Test authentication
      tags:
        - auth
  /v1/user/blueprints:
    post:
      description: Create a new blueprint for the authenticated user
      operationId: create-blueprint
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlueprintParams'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Create a new blueprint
      tags:
        - blueprints
  '/v1/user/blueprints/{id}':
    delete:
      description: Delete a blueprint for the authenticated user
      operationId: delete-blueprint
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBlueprintOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Delete blueprint
      tags:
        - blueprints
    patch:
      description: Update a blueprint for the authenticated user
      operationId: update-blueprint
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlueprintDocument'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBlueprintOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Update blueprint
      tags:
        - blueprints
  '/v1/user/blueprints/{id}/subscribe':
    patch:
      description: Subscribe to a blueprint
      operationId: subscribe-to-blueprint
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribeToBlueprintOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Subscribe to blueprint
      tags:
        - blueprints
  '/v1/user/blueprints/{id}/unsubscribe':
    patch:
      description: Unsubscribe from a blueprint
      operationId: unsubscribe-from-blueprint
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsubscribeFromBlueprintOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Unsubscribe from blueprint
      tags:
        - blueprints
  /v1/user/categories:
    post:
      description: Create a new category for the authenticated user
      operationId: create-category
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryParams'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Create a new category
      tags:
        - categories
  '/v1/user/categories/workspace/{name}':
    delete:
      description: Delete a workspace and all its categories
      operationId: delete-workspace
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: workspace1
          in: path
          name: name
          required: true
          schema:
            examples:
              - workspace1
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkspaceOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Delete workspace
      tags:
        - categories
  '/v1/user/categories/{id}':
    delete:
      description: Delete a category for the authenticated user
      operationId: delete-category
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCategoryOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Delete category
      tags:
        - categories
    get:
      description: Retrieve all categories for a specific user
      operationId: get-categories-by-user
      parameters:
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkspaceResult'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get categories by user ID
      tags:
        - categories
    patch:
      description: Update a category for the authenticated user
      operationId: update-category
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryDocument'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Update category
      tags:
        - categories
  /v1/user/connections:
    get:
      description: Retrieve all connection requests
      operationId: get-connections
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConnectionDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get all connections
      tags:
        - connections
    post:
      description: Create a new friend connection request
      operationId: create-connection
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectionParams'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Create a new connection
      tags:
        - connections
  /v1/user/connections/received:
    get:
      description: Get all connections where the authenticated user is the receiver
      operationId: get-connections-by-receiver
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConnectionDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get connections by receiver
      tags:
        - connections
  '/v1/user/connections/requested/{id}':
    get:
      description: Get all connections where the specified user is the requester
      operationId: get-connections-by-requester
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConnectionDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get connections by requester
      tags:
        - connections
  '/v1/user/connections/{id}':
    delete:
      description: Delete/deny a connection request
      operationId: delete-connection
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConnectionOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Delete connection
      tags:
        - connections
    get:
      description: Retrieve a specific connection by its ID
      operationId: get-connection
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get connection by ID
      tags:
        - connections
    patch:
      description: Update a connection request
      operationId: update-connection
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectionDocument'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConnectionOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Update connection
      tags:
        - connections
  /v1/user/login:
    post:
      description: Authenticate user with existing token
      operationId: login-token
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SafeUser'
          description: OK
          headers:
            access_token:
              schema:
                type: string
            refresh_token:
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Login with token
      tags:
        - auth
  /v1/user/posts:
    get:
      description: Retrieve all posts
      operationId: get-posts
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PostDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get all posts
      tags:
        - posts
    post:
      description: Create a new post with the provided details
      operationId: create-post
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostParams'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Create a new post
      tags:
        - posts
  '/v1/user/posts/{id}':
    delete:
      description: Delete an existing post
      operationId: delete-post
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePostOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Delete post
      tags:
        - posts
    get:
      description: Retrieve a specific post by its ID
      operationId: get-post
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get post by ID
      tags:
        - posts
    patch:
      description: Update an existing post
      operationId: update-post
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostDocument'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePostOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Update post
      tags:
        - posts
  /v1/user/pushtoken:
    post:
      description: Update user's push notification token
      operationId: update-push-token
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePushTokenRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePushTokenOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Update push token
      tags:
        - auth
  /v1/user/tasks/:
    get:
      description: Retrieve tasks for a specific user with optional sorting
      operationId: get-tasks-by-user
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - explode: false
          in: query
          name: id
          schema:
            type: string
        - example: timestamp
          explode: false
          in: query
          name: sortBy
          schema:
            default: timestamp
            examples:
              - timestamp
            type: string
        - example: '-1'
          explode: false
          in: query
          name: sortDir
          schema:
            default: '-1'
            examples:
              - '-1'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get tasks by user
      tags:
        - tasks
  '/v1/user/tasks/active/{category}/{id}':
    post:
      description: Change the active status of a task
      operationId: activate-task
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: category
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
        - example: 'true'
          explode: false
          in: query
          name: active
          schema:
            examples:
              - 'true'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateTaskOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Activate/deactivate task
      tags:
        - tasks
  '/v1/user/tasks/complete/{category}/{id}':
    post:
      description: Mark a task as completed
      operationId: complete-task
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: category
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskDocument'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteTaskOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Complete task
      tags:
        - tasks
  /v1/user/tasks/template/old:
    get:
      description: Get all tasks with start times older than one day
      operationId: get-tasks-with-old-start-times
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TemplateTaskDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get tasks with old start times
      tags:
        - tasks
  /v1/user/tasks/template/pastDeadline:
    get:
      description: Get all recurring tasks that have past their deadlines
      operationId: get-recurring-tasks-with-past-deadlines
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TemplateTaskDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get recurring tasks with past deadlines
      tags:
        - tasks
  '/v1/user/tasks/template/{id}':
    post:
      description: Create a new task based on a template
      operationId: create-task-from-template
      parameters:
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Create task from template
      tags:
        - tasks
  '/v1/user/tasks/{category}':
    post:
      description: Create a new task in a specific category
      operationId: create-task
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: category
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskParams'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Create a new task
      tags:
        - tasks
  '/v1/user/tasks/{category}/{id}':
    delete:
      description: Delete a task record
      operationId: delete-task
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: category
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTaskOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Delete task
      tags:
        - tasks
    patch:
      description: Update a task record
      operationId: update-task
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: category
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskDocument'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTaskOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Update task
      tags:
        - tasks
  '/v1/user/tasks/{category}/{id}/checklist':
    post:
      description: Update the checklist field of a task
      operationId: update-task-checklist
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: category
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskChecklistDocument'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTaskChecklistOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Update task checklist
      tags:
        - tasks
  '/v1/user/tasks/{category}/{id}/notes':
    post:
      description: Update the notes field of a task
      operationId: update-task-notes
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: category
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskNotesDocument'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTaskNotesOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Update task notes
      tags:
        - tasks
  /v1/user/waitlist:
    get:
      description: Retrieve all waitlist entries (admin only)
      operationId: get-waitlists
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WaitlistDocument'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get all waitlist entries
      tags:
        - waitlist
  '/v1/user/waitlist/{id}':
    delete:
      description: Remove a waitlist entry by its ID
      operationId: delete-waitlist
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWaitlistOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Delete waitlist entry
      tags:
        - waitlist
    get:
      description: Retrieve a specific waitlist entry by its ID
      operationId: get-waitlist
      parameters:
        - description: Bearer token for authentication
          in: header
          name: Authorization
          required: true
          schema:
            description: Bearer token for authentication
            type: string
        - description: Refresh token for authentication
          in: header
          name: refresh_token
          required: true
          schema:
            description: Refresh token for authentication
            type: string
        - example: 507f1f77bcf86cd799439011
          in: path
          name: id
          required: true
          schema:
            examples:
              - 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get waitlist entry by ID
      tags:
        - waitlist
  /v1/user/workspaces:
    get:
      description: Retrieve all workspaces for the authenticated user
      operationId: get-workspaces
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkspaceResult'
                type:
                  - array
                  - 'null'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Get user workspaces
      tags:
        - categories
  /v1/waitlist:
    post:
      description: Add a new email to the waitlist
      operationId: create-waitlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWaitlistParams'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistDocument'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Create a new waitlist entry
      tags:
        - waitlist
  /welcome:
    get:
      description: Returns a welcome message
      operationId: get-welcome
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WelcomeOutputBody'
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      summary: Welcome endpoint
      tags:
        - general
