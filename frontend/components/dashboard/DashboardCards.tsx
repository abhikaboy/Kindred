import { View } from "react-native";
import React from "react";
import DashboardCard from "../cards/DashboardCard";
import Svg, { Path } from "react-native-svg";
import { useThemeColor } from "@/hooks/useThemeColor";
import { Ionicons } from "@expo/vector-icons";
import { router } from "expo-router";
import { DrawerLayout } from "react-native-gesture-handler";
import TodaySection from "./TodaySection";
import { AttachStep } from "react-native-spotlight-tour";

type Props = {
    drawerRef?: React.RefObject<DrawerLayout>;
};

const DashboardCards = (props: Props) => {
    const ThemedColor = useThemeColor();
    return (
        <View style={{ flexDirection: "column", gap: 16, width: "100%" }}>
            <View style={{ flexDirection: "row", gap: 16, width: "100%" }}>
                <DashboardCard
                    title="Daily View"
                    icon={
                        <Svg width="32" height="32" viewBox="0 0 32 32" fill="none">
                            <Path
                                d="M21.9996 8.49976C21.9996 8.79643 21.9117 9.08644 21.7469 9.33311C21.582 9.57978 21.3478 9.77204 21.0737 9.88558C20.7996 9.99911 20.498 10.0288 20.207 9.97093C19.916 9.91306 19.6488 9.7702 19.439 9.56042C19.2292 9.35064 19.0863 9.08336 19.0285 8.79239C18.9706 8.50142 19.0003 8.19982 19.1138 7.92573C19.2274 7.65164 19.4196 7.41737 19.6663 7.25255C19.913 7.08773 20.203 6.99976 20.4996 6.99976C20.8975 6.99976 21.279 7.15779 21.5603 7.4391C21.8416 7.7204 21.9996 8.10193 21.9996 8.49976ZM15.6396 16.231C15.5389 16.1467 15.4226 16.0831 15.2973 16.0437C15.172 16.0044 15.0402 15.9901 14.9094 16.0017C14.7786 16.0133 14.6513 16.0506 14.5349 16.1114C14.4185 16.1722 14.3152 16.2553 14.2309 16.356L9.2309 22.356C9.06116 22.5599 8.97937 22.8229 9.00351 23.087C9.02766 23.3512 9.15576 23.595 9.35965 23.7648C9.56353 23.9345 9.8265 24.0163 10.0907 23.9921C10.3549 23.968 10.5987 23.8399 10.7684 23.636L15.7684 17.636C15.937 17.4324 16.0182 17.1702 15.994 16.9069C15.9699 16.6436 15.8425 16.4006 15.6396 16.231ZM29.9996 9.99976C29.9998 10.1644 29.9592 10.3266 29.8816 10.4718C29.8039 10.617 29.6916 10.7409 29.5546 10.8323L26.9996 12.5348V14.9998C26.996 18.4465 25.6252 21.7509 23.188 24.1881C20.7508 26.6253 17.4463 27.9961 13.9996 27.9998H0.999649C0.811197 27.9999 0.626546 27.9467 0.46698 27.8465C0.307414 27.7462 0.179427 27.6029 0.0977716 27.4331C0.016116 27.2632 -0.0158848 27.0737 0.00545747 26.8865C0.0267997 26.6993 0.100616 26.5219 0.218399 26.3748L11.9996 11.6485V9.49976C11.998 7.70821 12.6376 5.97524 13.8029 4.61445C14.9682 3.25365 16.5821 2.35494 18.3526 2.08093C20.123 1.80693 21.9331 2.17573 23.4552 3.12061C24.9773 4.06549 26.1109 5.52402 26.6509 7.23226L29.5546 9.16726C29.6916 9.25865 29.8039 9.38246 29.8816 9.52769C29.9592 9.67292 29.9998 9.83508 29.9996 9.99976ZM27.1971 9.99976L25.2371 8.69226C25.0327 8.55627 24.8854 8.34983 24.8234 8.11226C24.4872 6.81649 23.69 5.68782 22.5812 4.93778C21.4724 4.18775 20.1281 3.86786 18.8003 4.03807C17.4725 4.20828 16.2524 4.85691 15.3686 5.86237C14.4848 6.86783 13.9981 8.1611 13.9996 9.49976V11.9998C13.9998 12.2269 13.9227 12.4473 13.7809 12.6248L3.07965 25.9998H13.9996C16.916 25.9964 19.712 24.8365 21.7742 22.7743C23.8364 20.7121 24.9963 17.9161 24.9996 14.9998V11.9998C24.9995 11.8351 25.0401 11.6729 25.1177 11.5277C25.1954 11.3825 25.3077 11.2587 25.4446 11.1673L27.1971 9.99976Z"
                                fill={ThemedColor.text}
                            />
                        </Svg>
                    }
                    onPress={() => {
                        router.push({
                            pathname: "/(logged-in)/(tabs)/(task)/daily",
                            params: { workspace: "Daily" }
                        });
                    }}
                />
                <AttachStep index={0}>
                    <DashboardCard
                        title="Workspaces"  
                        icon={
                            <Svg width="32" height="32" viewBox="0 0 32 32" fill="none">
                                <Path
                                    d="M26 3H9C7.93913 3 6.92172 3.42143 6.17157 4.17157C5.42143 4.92172 5 5.93913 5 7V28C5 28.2652 5.10536 28.5196 5.29289 28.7071C5.48043 28.8946 5.73478 29 6 29H24C24.2652 29 24.5196 28.8946 24.7071 28.7071C24.8946 28.5196 25 28.2652 25 28C25 27.7348 24.8946 27.4804 24.7071 27.2929C24.5196 27.1054 24.2652 27 24 27H7C7 26.4696 7.21071 25.9609 7.58579 25.5858C7.96086 25.2107 8.46957 25 9 25H26C26.2652 25 26.5196 24.8946 26.7071 24.7071C26.8946 24.5196 27 24.2652 27 24V4C27 3.73478 26.8946 3.48043 26.7071 3.29289C26.5196 3.10536 26.2652 3 26 3ZM15 5H21V14L18.5987 12.2C18.4257 12.0702 18.2151 12 17.9988 12C17.7824 12 17.5718 12.0702 17.3988 12.2L15 14V5ZM25 23H9C8.29768 22.999 7.60763 23.1841 7 23.5362V7C7 6.46957 7.21071 5.96086 7.58579 5.58579C7.96086 5.21071 8.46957 5 9 5H13V16C13 16.1857 13.0517 16.3678 13.1493 16.5257C13.247 16.6837 13.3867 16.8114 13.5528 16.8944C13.7189 16.9775 13.9048 17.0126 14.0898 16.996C14.2748 16.9793 14.4514 16.9114 14.6 16.8L18 14.25L21.4013 16.8C21.574 16.9296 21.7841 16.9997 22 17C22.2652 17 22.5196 16.8946 22.7071 16.7071C22.8946 16.5196 23 16.2652 23 16V5H25V23Z"
                                    fill={ThemedColor.text}
                                />
                            </Svg>
                        }
                        onPress={() => {
                            props.drawerRef?.current?.openDrawer();
                        }}
                    />
                </AttachStep>
            </View>
            
            <TodaySection />
        </View>
    );
};

export default DashboardCards;
